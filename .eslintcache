[{"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\index.js":"1","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\App.js":"2","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\store.js":"3","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\verificationCodePage\\VreficationCode.js":"4","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\ProfilePage\\Profile.js":"5","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\LoginPage\\Login.js":"6","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\SignUp\\SignUp.js":"7","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\MainPage.js":"8","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\SplashScreenPage\\SplashScreen.js":"9","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\ReserveTable\\ReserveTable.js":"10","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\BillPage\\Bill.js":"11","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\Tour360page\\Tour360.js":"12","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MoreOptions\\MoreOptions.js":"13","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\PayWay\\PayWay.js":"14","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\OrderReport\\OrderReport.js":"15","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\AboutRestaurant\\AboutRestaurant.js":"16","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\OpenOrders\\OpenOrders.js":"17","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\index.js":"18","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\actions.js":"19","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerUser.js":"20","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerFrontStates.js":"21","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerTempData.js":"22","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerRestaurant.js":"23","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\ApiRequests\\requests.js":"24","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\VerificationCodeInput\\vCodeInput.js":"25","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\cachedData\\cachedData.js":"26","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\usableFunctions\\gregorianToTimestamp.js":"27","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\usableFunctions\\jalaliToGregorian.js":"28","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\usableFunctions\\englishNumToPersianNum.js":"29","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\BottomNavigation\\BottomNavigation.js":"30","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\js\\randomColor.js":"31","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\js\\rowDataToObject.js":"32","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\js\\moreOrderedFoods.js":"33","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MoreFoodDetails\\MoreDetails.js":"34","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\ReserveTable\\js\\availableReserviationTimes.js":"35","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\actionTypes.js":"36","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\__init__Reducers.js":"37","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\CusFood\\CusFood.js":"38"},{"size":308,"mtime":1606821927186,"results":"39","hashOfConfig":"40"},{"size":2191,"mtime":1610391539642,"results":"41","hashOfConfig":"40"},{"size":135,"mtime":1603531481659,"results":"42","hashOfConfig":"40"},{"size":8924,"mtime":1610294076543,"results":"43","hashOfConfig":"40"},{"size":14015,"mtime":1610096265000,"results":"44","hashOfConfig":"40"},{"size":13009,"mtime":1610293902435,"results":"45","hashOfConfig":"40"},{"size":10893,"mtime":1609249756000,"results":"46","hashOfConfig":"40"},{"size":25415,"mtime":1610373455552,"results":"47","hashOfConfig":"40"},{"size":1108,"mtime":1607608994938,"results":"48","hashOfConfig":"40"},{"size":19368,"mtime":1606390471000,"results":"49","hashOfConfig":"40"},{"size":5728,"mtime":1610372032845,"results":"50","hashOfConfig":"40"},{"size":9692,"mtime":1610295731228,"results":"51","hashOfConfig":"40"},{"size":1609,"mtime":1609507160000,"results":"52","hashOfConfig":"40"},{"size":23176,"mtime":1610200209000,"results":"53","hashOfConfig":"40"},{"size":13003,"mtime":1610200852000,"results":"54","hashOfConfig":"40"},{"size":2751,"mtime":1607505655000,"results":"55","hashOfConfig":"40"},{"size":2667,"mtime":1609320842000,"results":"56","hashOfConfig":"40"},{"size":384,"mtime":1602752900145,"results":"57","hashOfConfig":"40"},{"size":4272,"mtime":1610295320580,"results":"58","hashOfConfig":"40"},{"size":2389,"mtime":1609409474038,"results":"59","hashOfConfig":"40"},{"size":996,"mtime":1610295320595,"results":"60","hashOfConfig":"40"},{"size":4695,"mtime":1609409474083,"results":"61","hashOfConfig":"40"},{"size":914,"mtime":1603653941737,"results":"62","hashOfConfig":"40"},{"size":6339,"mtime":1609407205058,"results":"63","hashOfConfig":"40"},{"size":2614,"mtime":1607632062000,"results":"64","hashOfConfig":"40"},{"size":796,"mtime":1609407205096,"results":"65","hashOfConfig":"40"},{"size":255,"mtime":1602407424000,"results":"66","hashOfConfig":"40"},{"size":1633,"mtime":1602406914000,"results":"67","hashOfConfig":"40"},{"size":880,"mtime":1602489334000,"results":"68","hashOfConfig":"40"},{"size":6433,"mtime":1610373482832,"results":"69","hashOfConfig":"40"},{"size":428,"mtime":1609945596000,"results":"70","hashOfConfig":"40"},{"size":2054,"mtime":1603018326000,"results":"71","hashOfConfig":"40"},{"size":1517,"mtime":1607583034000,"results":"72","hashOfConfig":"40"},{"size":2481,"mtime":1607581476494,"results":"73","hashOfConfig":"40"},{"size":3631,"mtime":1605897729000,"results":"74","hashOfConfig":"40"},{"size":1212,"mtime":1610295320618,"results":"75","hashOfConfig":"40"},{"size":1211,"mtime":1610295320606,"results":"76","hashOfConfig":"40"},{"size":1281,"mtime":1610392828363,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1tb621y",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\index.js",[],["171","172"],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\App.js",["173"],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\store.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\verificationCodePage\\VreficationCode.js",["174","175","176","177","178","179"],"// import in this order :\r\n//      1- React, Redux (functional libraries)\r\n//      2- bootstrap, animation (non functional libraries)\r\n//      3- our functions\r\n//      4- components\r\n\r\nimport React from \"react\";\r\nimport { Swipeable } from 'react-swipeable'\r\nimport { connect } from 'react-redux';\r\nimport 'animate.css/animate.css'\r\nimport * as requests from '../../ApiRequests/requests'\r\nimport * as actions from '../../reduxStore/actions'\r\nimport VerificationCodeInput from '../VerificationCodeInput/vCodeInput'\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst ReactSwal = withReactContent(Swal)\r\n\r\n\r\nclass VerificationCode extends React.Component {\r\n    state = {\r\n        inputclass:\"shadow\"\r\n    }\r\n\r\n    checkCodeWasCorrect = (response) =>{\r\n        if(response.statusCode === 200){\r\n            if(response['missingUserInfo'] === true){\r\n                this.props.setSendVCode(false);\r\n                this.props.history.push('/signup')\r\n            }else{\r\n                requests.getUserInfo(()=>{\r\n                    requests.getCustomerInfo(()=>{\r\n                        this.props.setSendVCode(false);\r\n                        this.props.history.push('/profile')\r\n                    })\r\n                });\r\n\r\n            }\r\n        }else {\r\n            ReactSwal.fire({\r\n                title: '!!! آخ',\r\n                icon: 'error',\r\n                text: \"کد رو اشتباه زدی که\",\r\n                timerProgressBar:true,\r\n                timer:2000,\r\n                confirmButtonText:\"آها راس میگی، حله\"\r\n            });\r\n        }\r\n    }\r\n\r\n    sendCode = (code)=>{\r\n        requests.checkVerificationCode(code,this.checkCodeWasCorrect)\r\n    }\r\n\r\n    handleSubmit = (elem) => {\r\n        elem.preventDefault()\r\n    }\r\n\r\n     backToNumber = ()=>{\r\n         this.props.setSendVCode(false)\r\n         this.props.history.push('/login')\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\" style={{height: \"100%\", textAlign: \"center\",transition:'0.2s ease'}}>\r\n\r\n                <Swipeable onSwipedDown={()=>{this.props.frontStatesPageSize(\"small\")}} preventDefaultTouchmoveEvent={true}>\r\n                    <div style={{height:\"20px\"}}/>\r\n                    <div className=\"contain \" style={{width: \"100%\", position: \"absolute\", bottom: \"0\",height:'100%'}}>\r\n                        <div className=\"\" style={bigMainContainerStyle}>\r\n                            {/*<Header/>*/}\r\n                            <div className='headerOfLogin'>\r\n                                <div className='userIcon'/>\r\n                                <p style={{paddingTop: \"5px\", fontFamily: \"IRANSansMobile_Light\", userSelect: \"none\"}}>ورود/ثبت\r\n                                    نام</p>\r\n                            </div>\r\n                            <div className=\"loginVectorVCode\">\r\n                            </div>\r\n                            <p style={{paddingTop: \"5px\", fontSize: \"20px\", fontFamily: \"IRANSansMobile_Light\", userSelect:\"none\"}}>کد را وارد کنید</p>\r\n                            <p onClick={this.backToNumber} style={{color:'#1C2A75'}}> تغیر شماره</p>\r\n\r\n                            <VerificationCodeInput sendCode={this.sendCode}/>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Swipeable>\r\n            </div>\r\n        )\r\n        // if(this.props.pageSize === \"small\"){\r\n        //     return (this.smallPage)\r\n        // }else {\r\n        //     return (this.bigPage)\r\n        // }\r\n    }\r\n\r\n    //\r\n    // bigPage =\r\n    //     <div className=\"app\" style={{height: \"100%\", textAlign: \"center\",transition:'0.2s ease'}}>\r\n    //\r\n    //         <Swipeable onSwipedDown={()=>{this.props.frontStatesPageSize(\"small\")}} preventDefaultTouchmoveEvent={true}>\r\n    //         <div style={{height:\"20px\"}}/>\r\n    //             <div className=\"contain \" style={{width: \"100%\", position: \"absolute\", bottom: \"0\",height:'100%'}}>\r\n    //                 <div className=\"\" style={bigMainContainerStyle}>\r\n    //                     {/*<Header/>*/}\r\n    //                     <div className='headerOfLogin'>\r\n    //                         <div className='userIcon'/>\r\n    //                         <p style={{paddingTop: \"5px\", fontFamily: \"IRANSansMobile_Light\", userSelect: \"none\"}}>ورود/ثبت\r\n    //                             نام</p>\r\n    //                     </div>\r\n    //                     <div className=\"loginVectorVCode\">\r\n    //                     </div>\r\n    //                     <p style={{paddingTop: \"5px\", fontSize: \"20px\", fontFamily: \"IRANSansMobile_Light\", userSelect:\"none\"}}>کد را وارد کنید</p>\r\n    //                     <p onClick={this.backToNumber} style={{color:'#1C2A75'}}> تغیر شماره</p>\r\n    //\r\n    //                     <VerificationCodeInput sendCode={this.sendCode}/>\r\n    //\r\n    //                 </div>\r\n    //             </div>\r\n    //         </Swipeable>\r\n    //     </div>;\r\n    //\r\n    //\r\n    // smallPage =\r\n    //     <div style={{height: \"100%\",textAlign:\"center\"}}>\r\n    //         <Swipeable onSwipedUp={()=>{this.props.frontStatesPageSize(\"big\")}} preventDefaultTouchmoveEvent={true}>\r\n    //             <div className=\"contain \" style={{width: \"100%\", position: \"absolute\", bottom: \"0\",}}>\r\n    //                 <div className=\"logi\" style={smallMainContainerStyle} >\r\n    //                     {/*<Header/>*/}\r\n    //                     <p style={{paddingTop: \"5px\", fontFamily: \"IRANSansMobile_Light\", userSelect:\"none\"}}>ورود/ثبت نام</p>\r\n    //                     <p style={{paddingTop: \"5px\", fontSize: \"20px\", fontFamily: \"IRANSansMobile_Light\", userSelect:\"none\"}}>کد را وارد کنید</p>\r\n    //                     <p onClick={this.backToNumber} style={{color:'#1C2A75'}}> تغیر شماره</p>\r\n    //                     <VerificationCodeInput sendCode={this.sendCode}/>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </Swipeable>\r\n    //     </div>\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        pageSize: store.reducerFrontStates.pageSize\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () =>{\r\n    return{\r\n        frontStatesPageSize: actions.frontStatesPageSize,\r\n        setHeaderOrder: actions.frontStatesHeaderOrder,\r\n        setSendVCode:actions.setSentVCode\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationCode);\r\n\r\n//------------------------------------------ Styles --------------------------------------\r\nconst smallMainContainerStyle = {\r\n    background: \"white\",\r\n    borderTopLeftRadius: \"18px\",\r\n    borderTopRightRadius: \"18px\",\r\n    bottom: \"0\",\r\n    marginLeft: \"8px\",\r\n    marginRight: \"8px\",\r\n    height: \"320px\",\r\n    boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    userSelect: \"none\"\r\n\r\n}\r\n\r\nconst bigMainContainerStyle = {\r\n    // background: \"linear-gradient(to bottom, #f1d2d2, #e2ecec  90%)\",\r\n    // borderTopLeftRadius: \"18px\",\r\n    // borderTopRightRadius: \"18px\",\r\n    // marginLeft: \"8px\",\r\n    // marginRight: \"8px\",\r\n    // boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    // userSelect:\"none\",\r\n    // bottom:'0',\r\n    // zIndex:'999'\r\n\r\n    // background: \"linear-gradient(to bottom, #f1d2d2, #e2ecec  90%)\",\r\n    // borderTopLeftRadius: \"18px\",\r\n    // borderTopRightRadius: \"18px\",\r\n    // bottom: \"0\",\r\n    // marginLeft: \"8px\",\r\n    // marginRight: \"8px\",\r\n    // boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    // userSelect:\"none\",\r\n\r\n    background: 'white',\r\n    // borderTopLeftRadius: '18px',\r\n    // borderTopRightRadius: '18px',\r\n    bottom: '0px',\r\n    // marginLeft: '8px',\r\n    // marginRight: '8px',\r\n    width: '100%',\r\n    height: 'calc(100%',\r\n    boxShadow: 'rgba(0, 0, 0, 0.25) 0px 0.5rem 1rem',\r\n    userSelect: 'none',\r\n    position: 'absolute',\r\n    overflow:'scroll'\r\n}\r\n\r\nconst topOfMainStyle = {\r\n    width: \"100%\",\r\n    boxShadow:\"0 4px 2px -2px rgba(0, 0, 0, 0.15)\",\r\n    paddingBottom: \"5px\"\r\n}\r\n\r\nconst avatarStyle = {\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    marginTop: \"-28px\",\r\n    userSelect: \"none\",\r\n    background:\"url(../img/avatar.png) center no-repeat \",\r\n    backgroundSize:\"100%\"\r\n}\r\n\r\nconst menuIconStyle = {\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    userSelect: \"none\",\r\n    background:\"url(../img/menuIcon.png) center no-repeat \",\r\n    backgroundSize:\"100%\",\r\n    margin: \"10px 10px 0 0\"\r\n}\r\n\r\nconst logoStyle = {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    userSelect: \"none\",\r\n    background:\"url(../img/logo.png) center no-repeat \",\r\n    backgroundSize:\"100%\",\r\n    margin: \"10px 0 0 10px\"\r\n}\r\n\r\nconst vectorStyle = {\r\n    width: \"200px\",\r\n    height:\"200px\",\r\n    userSelect: \"none\",\r\n    background:\"url(img/bvv.png) center no-repeat \",\r\n    backgroundSize:\"100%\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"50px\"\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\ProfilePage\\Profile.js",["180","181","182"],"import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {faEdit, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport $ from \"jquery\"\r\nimport DatePicker from 'react-modern-calendar-datepicker';\r\nimport * as actions from \"../../reduxStore/actions\";\r\nimport * as requests from \"../../ApiRequests/requests\"\r\nimport * as fixNumber from '../../usableFunctions/englishNumToPersianNum'\r\nimport {jalaliToGregorian} from \"../../usableFunctions/jalaliToGregorian\";\r\nimport {gregorianToTimestamp} from \"../../usableFunctions/gregorianToTimestamp\";\r\nimport './style/style.css'\r\nimport {removeCacheToken} from \"../../reduxStore/cachedData/cachedData\";\r\nimport BottomNavigation from \"../BottomNavigation/BottomNavigation\";\r\nimport * as randomColor from \"../MainPage/js/randomColor\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nclass Profile extends React.Component {\r\n    userBirthDayJalaliArray = fixNumber.fixNumbers(new Date((this.props.birthday > 1000) ? (this.props.birthday * 1000) : 974379661000).toLocaleDateString('fa-IR')).split(\"/\")\r\n    userBirthDayJalaliObject = {\r\n        year: parseInt(this.userBirthDayJalaliArray[0]),\r\n        month: parseInt(this.userBirthDayJalaliArray[1]),\r\n        day: parseInt(this.userBirthDayJalaliArray[2])\r\n    }\r\n\r\n    state = {\r\n        icon1: faEdit,\r\n        icon2: faEdit,\r\n        icon3: faEdit,\r\n        selectedDay: this.userBirthDayJalaliObject,\r\n        moreOrderDetailRows: [],\r\n        moreOrderDetailDate: ''\r\n    }\r\n\r\n    isTouching = false;\r\n    listOfOrders = (this.props.orderListRestaurant.map(eachOrder => {\r\n        let eachOrderFoodList = JSON.parse(eachOrder.order_list)\r\n        let listOfOrderFoods;\r\n        for (let i = 0; i < eachOrderFoodList.length; i++) {\r\n\r\n            listOfOrderFoods += eachOrderFoodList[i].name\r\n        }\r\n\r\n        return (\r\n\r\n            <div className='ordersProfile shadow-sm' style={{backgroundColor: randomColor.default(1)}}>\r\n                <div className='orderFoodList'>{listOfOrderFoods}</div>\r\n                <div className='orderProfileBottom'>\r\n                    <span className='orange'>{eachOrder.total_price}</span>\r\n                    <span className='orange'>8/09</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    })) ? (this.props.orderListRestaurant.map(eachOrder => {\r\n        let eachOrderFoodList = JSON.parse(eachOrder.order_list)\r\n        let listOfOrderFoods = '';\r\n        for (let i = 0; i < eachOrderFoodList.length; i++) {\r\n\r\n            listOfOrderFoods += eachOrderFoodList[i].name + ' / '\r\n        }\r\n        return (\r\n            <div className='ordersProfile shadow-sm' style={{backgroundColor: randomColor.default()}}>\r\n                <div className='orderFoodList'>{listOfOrderFoods}</div>\r\n                <div className='orderProfileBottom'>\r\n                    <span className='green'>{eachOrder.total_price / 1000 + 'T'}</span>\r\n                    <span className='green'>8/09</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    })) : 'testString'\r\n\r\n    handleEachOrderHold = (orderList) => {\r\n        let ordersMapped = JSON.parse(orderList).map(eachoorder => {\r\n            return (\r\n                <div id='orderMoreDetailsFoodRows'>\r\n                    <div id='orderMoreDetailsFirstRow1'>\r\n                        <span>{eachoorder.name}</span>\r\n                    </div>\r\n                    <div id='orderMoreDetailsFirstRow2'>\r\n                        <span>{eachoorder.number + 'X'}</span>\r\n                    </div>\r\n                    <div id='orderMoreDetailsFirstRow3'>\r\n                        <span>{eachoorder.priceAfterDiscount}</span>\r\n                    </div>\r\n                    <div id='orderMoreDetailsFirstRow4'>\r\n                        <span>{eachoorder.price}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        this.setState({moreOrderDetailRows: ordersMapped})\r\n        setTimeout(() => {\r\n\r\n            if (this.isTouching) {\r\n                $('#orderMoreDetails').show()\r\n                $('#orderMoreDetails').animate({opacity: '1'}, 300, \"swing\")\r\n            }\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    handleEachOrderLeave = () => {\r\n        this.isTouching = false;\r\n        $('#orderMoreDetails').animate({opacity: '0'}, 300, \"swing\", () => {\r\n            $('#orderMoreDetails').hide()\r\n        })\r\n    }\r\n\r\n    clearCache = () => {\r\n        removeCacheToken();\r\n        this.props.userDeleteAllData()\r\n        this.props.history.push('/main')\r\n    }\r\n\r\n    callbackFunction = (data) => {\r\n        requests.getCustomerInfo()\r\n    }\r\n    editButtonClick = (button) => {\r\n        let inputName = document.getElementsByClassName('inputName')\r\n        let inputJob = document.getElementsByClassName('inputJob')\r\n        let inputBirthday = document.getElementsByClassName('inputBirthday')\r\n\r\n        if (button.target.value.toString() === 'edit') {\r\n            inputName[0].disabled = false\r\n            inputJob[0].disabled = false\r\n            inputBirthday[0].disabled = false\r\n            button.target.value = 'submit'\r\n            button.target.innerText = 'تایید'\r\n        } else {\r\n            inputName[0].disabled = true\r\n            inputJob[0].disabled = true\r\n            inputBirthday[0].disabled = true\r\n            button.target.value = 'edit'\r\n            button.target.innerText = 'ویرایش'\r\n\r\n            if (inputName.value) {\r\n                requests.profileEditRequest(\"editName\", $(\"#nameInput\").val(), this.callbackFunction)\r\n            }\r\n            if (inputJob[0].value) {\r\n                requests.profileEditRequest(\"editJob\", $(\"#jobInput\").val(), this.callbackFunction)\r\n            }\r\n            let birthday = this.state.selectedDay;\r\n            let gregorianBirthday = jalaliToGregorian(birthday.year, birthday.month, birthday.day);\r\n            let timestamp = gregorianToTimestamp(gregorianBirthday);\r\n            requests.profileEditRequest(\"editBirthday\", timestamp, this.callbackFunction)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        requests.getCustomerInfo()\r\n        $('.DatePicker__input').prop(\"disabled\", true)\r\n        $('.DatePicker__input').css({\r\n            opacity: \"0\",\r\n            position: \"absolute\",\r\n            left: \"20%\",\r\n            marginTop: \"-5px\",\r\n            width: \"100%\",\r\n            overflow: \"hidden\"\r\n        })\r\n        let birthInput = document.getElementsByClassName('DatePicker');\r\n        birthInput[0].style.display = \"content\";\r\n        birthInput[0].style.width = \"100%\";\r\n\r\n    }\r\n\r\n\r\n    selectedDay = (element) => {\r\n        this.setState({\r\n            selectedDay: element\r\n        })\r\n        let inputBirthday = document.getElementsByClassName('inputBirthday')\r\n        inputBirthday.value = fixNumber.unfixNumber(element.year.toString()) + '/' + fixNumber.unfixNumber(element.month.toString()) + '/' + fixNumber.unfixNumber(element.day.toString())\r\n    }\r\n\r\n    renderCustomInput = ({ref}) => (\r\n        <input\r\n            disabled\r\n            id=\"birthdayInput\"\r\n            readOnly\r\n            ref={ref}\r\n            placeholder={this.userBirthDayJalaliArray.join(\"/\")}\r\n            className=\"form-control inputBirthday\"\r\n        />\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div style={{direction: \"rtl\", position: \"relative\", background: 'white', zIndex: '2', height: '100%'}}>\r\n                <BottomNavigation/>\r\n                <div id='orderMoreDetails'>\r\n                    <div id='orderMoreDetailsHeader'>\r\n                        <span>{this.state.moreOrderDetailDate}</span>\r\n                    </div>\r\n                    <div id='orderMoreDetailsFirstRow'>\r\n                        <div id='orderMoreDetailsFirstRow1'>\r\n                            <span> اسم غذا</span>\r\n                        </div>\r\n                        <div id='orderMoreDetailsFirstRow2'>\r\n                            <span> تعداد</span>\r\n                        </div>\r\n                        <div id='orderMoreDetailsFirstRow3'>\r\n                            <span> قیمت پرداختی</span>\r\n                        </div>\r\n                        <div id='orderMoreDetailsFirstRow4'>\r\n                            <span> قیمت غذا</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*Rows Of Foods*/}\r\n\r\n                    {this.state.moreOrderDetailRows}\r\n                </div>\r\n\r\n                <div id='mainProfileToBlur'>\r\n                    <div id='headerProfile' className=\"container\">\r\n                        <div id='profileHeader' dir=\"ltr\">\r\n                            <div>\r\n                                <div className='backButton' onClick={() => {\r\n                                    this.props.history.push('/main')\r\n                                }}/>\r\n                            </div>\r\n                            <div onClick={this.clearCache} id='logOut'>\r\n                                <span id='logOutText' className='pr-1' >  خروج</span>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} size='lg'/>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container containerFixer\">\r\n                        <br/>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <div className=\"\">\r\n                                    <input id=\"nameInput\" placeholder=\"اسم و فامیل\" disabled\r\n                                           aria-describedby=\"basic-addon1\" aria-label\r\n                                           className=\"form-control inputName\" style={{}} defaultValue={this.props.name}\r\n                                           type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <div className=\"\">\r\n                                    <input id=\"nameInput\" placeholder=\"شغل\" disabled aria-describedby=\"basic-addon1\"\r\n                                           aria-label\r\n                                           className=\"form-control inputJob\" style={{}} defaultValue={this.props.job}\r\n                                           type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <DatePicker\r\n                                        value={this.state.selectedDay}\r\n                                        onChange={this.selectedDay}\r\n                                        inputPlaceholder=\"تاریخ تولد\"\r\n                                        shouldHighlightWeekends locale=\"fa\"\r\n                                        renderInput={this.renderCustomInput}\r\n                                        calendarClassName=\"responsive-calendar\"\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='btnContainer'>\r\n                            <button id=\"button\" onClick={this.editButtonClick} type=\"submit\" value='edit'\r\n                                    className=\"btn\" style={smallButtonStyle}>\r\n                                ویرایش\r\n                            </button>\r\n                        </div>\r\n                        <div className='totals'>\r\n                            <div className='totalbuy font-weight-bold'>\r\n                                <span>مجموع خرید</span>\r\n                                <span>{this.props.totalBoughtRestaurant + 'T'}</span>\r\n                            </div>\r\n\r\n                            <div className='totalbuy'>\r\n                                <span>امتیاز شما</span>\r\n                                <span>{this.props.scoreRestaurant}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*-----------------------------------------------------------------------------------------------------------------*/}\r\n                        <div className='ProfileOrders'>\r\n                            {this.listOfOrders}\r\n                        </div>\r\n                    </div>\r\n                    <div className='profileHeader'/>\r\n                   </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        name: store.reducerUser.name,\r\n        job: store.reducerUser.job,\r\n        birthday: parseInt(store.reducerUser.birthday),\r\n        headerOrder: store.reducerFrontStates.headerOrder,\r\n        scoreRestaurant: store.reducerUser.scoreRestaurant,\r\n        totalBoughtRestaurant: store.reducerUser.totalBoughtRestaurant,\r\n        orderListRestaurant: store.reducerUser.orderListRestaurant\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        setHeaderOrder: actions.frontStatesHeaderOrder,\r\n        userDeleteAllData: actions.userDeleteAllData\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n\r\nconst inputBirthdayStyle = {\r\n    borderTopRightRadius: '5px',\r\n    borderBottomRightRadius: '5px',\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n\r\n}\r\nconst smallButtonStyle = {\r\n    backgroundColor: \"#FAA21B\",\r\n    borderRadius: \"25px\",\r\n    width: \"90px\",\r\n    height: \"30px\",\r\n    marginTop: \"30px\",\r\n    fontFamily: \"IRANSansMobile_Light\",\r\n    paddingTop: \"5px\",\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\LoginPage\\Login.js",["183","184","185","186","187","188","189","190"],"// import in this order :\r\n//      1- React, Redux (functional libraries)\r\n//      2- bootstrap, animation (non functional libraries)\r\n//      3- our functions\r\n//      4- components\r\n\r\nimport React from \"react\";\r\nimport {Swipeable} from 'react-swipeable'\r\nimport {connect} from 'react-redux';\r\nimport 'animate.css/animate.css'\r\nimport * as requests from '../../ApiRequests/requests'\r\nimport * as actions from '../../reduxStore/actions'\r\nimport $ from 'jquery'\r\nimport BottomNavigation from \"../BottomNavigation/BottomNavigation\";\r\nimport './style/style.css'\r\nimport * as cache from \"../../reduxStore/cachedData/cachedData\";\r\n\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        inputclass: \"shadow-sm\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.token.length > 20) {\r\n            if (this.props.name.length > 2) {\r\n                this.props.history.push('/profile')\r\n            } else {\r\n                this.props.history.push('/signup')\r\n            }\r\n\r\n        } else if (this.props.sentVCode) {\r\n            this.props.history.push('/vcode')\r\n        } else if(cache.getCacheToken() !== undefined && cache.getCacheToken().length > 20){\r\n            actions.userSetToken(cache.getCacheToken());\r\n            requests.getUserInfo(()=>{\r\n                this.props.history.push('/profile')\r\n            });\r\n        }\r\n    }\r\n\r\n    checkPhone = (data) => {\r\n        if (data.statusCode === 200) {\r\n            this.props.setSendVCode(true)\r\n            this.props.history.push('/vcode')\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    handleSubmit = (elem) => {\r\n        let getElement = elem\r\n        elem.preventDefault()\r\n        let phone = elem.target.numin.value;\r\n        if (phone.length === 11) {\r\n            if (phone[0] === \"0\" && phone[1] === \"9\") {\r\n                requests.sendVerificationCode(elem.target.numin.value, this.checkPhone)\r\n            } else {\r\n                $(\"#numin\").attr('class', 'shadow animate__animated animate__shakeX ');\r\n                setTimeout(() => {\r\n                    $(\"#numin\").attr('class', 'shadow ');\r\n                }, 1000)\r\n            }\r\n\r\n\r\n        } else {\r\n            $(\"#numin\").attr('class', 'shadow animate__animated animate__shakeX ');\r\n            setTimeout(() => {\r\n                $(\"#numin\").attr('class', 'shadow ');\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n\r\n    handleInputChange = (element) => {\r\n\r\n        if (element.target.value.length > 11) {\r\n            element.target.value = element.target.value.slice(0, 11)\r\n        }\r\n\r\n    }\r\n\r\n    // bigPage =\r\n    //     <div className=\"app\" style={{height: \"100%\", textAlign: \"center\"}}>\r\n    //         <Swipeable onSwipedDown={() => {\r\n    //             this.props.frontStatesPageSize(\"small\")\r\n    //         }} preventDefaultTouchmoveEvent={true}>\r\n    //             <div className=\"contain \" style={{width: \"100%\", position: \"absolute\", bottom: \"0\", height: \"100%\"}}>\r\n    //                 <div className=\"inside\" style={bigMainContainerStyle}>\r\n    //                     {/*<Header />*/}\r\n    //                     <div className='headerOfLogin'>\r\n    //                         <div className='userIcon'></div>\r\n    //                         <p style={{\r\n    //                             paddingTop: \"5px\",\r\n    //                             fontFamily: \"IRANSansMobile_Light\",\r\n    //                             userSelect: \"none\"\r\n    //                         }}>ورود/ثبت\r\n    //                             نام</p>\r\n    //                     </div>\r\n    //                     <div className='loginVector'></div>\r\n    //\r\n    //                     <p style={{\r\n    //                         paddingTop: \"20px\",\r\n    //                         fontSize: \"15px\",\r\n    //                         fontFamily: \"IRANSansMobile_Light\",\r\n    //                         userSelect: \"none\"\r\n    //                     }}>\r\n    //                         لطفا شماره ی خود را وارد کنید\r\n    //\r\n    //                     </p>\r\n    //                     <form onSubmit={this.handleSubmit}>\r\n    //                         <input className={this.state.inputclass} id=\"numin\" type=\"number\" style={inputStyle}\r\n    //                                onChange={this.handleInputChange}\r\n    //                                placeholder=\"09---------\"/>\r\n    //                         <br/>\r\n    //                         <button id=\"button\" type=\"submit\" className=\"btn\" style={bigButtonStyle}> ارسال کد</button>\r\n    //                     </form>\r\n    //\r\n    //                 </div>\r\n    //             </div>\r\n    //         </Swipeable>\r\n    //         <BottomNavigation/>\r\n    //     </div>\r\n    // smallPage =\r\n    //     <div className=\"app\" style={{height: \"100%\", textAlign: \"center\"}}>\r\n    //         <Swipeable onSwipedUp={() => {\r\n    //             this.props.frontStatesPageSize(\"big\")\r\n    //         }} preventDefaultTouchmoveEvent={true}>\r\n    //             <div className=\"contain \" style={{width: \"100%\", position: \"absolute\", bottom: \"0\",}}>\r\n    //                 <div className=\"aa\" style={smallMainContainerStyle}>\r\n    //                     {/*<Header />*/}\r\n    //\r\n    //                     {/*<div className=\"d-flex justify-content-between\" style={topOfMainStyle}>*/}\r\n    //                     {/*    <div style={logoStyle} />*/}\r\n    //                     {/*    <div style={avatarStyle} />*/}\r\n    //                     {/*    <div style={menuIconStyle} />*/}\r\n    //                     {/*</div>*/}\r\n    //                     <div className='headerOfLogin'>\r\n    //                         <div className='userIcon'></div>\r\n    //                         <p style={{\r\n    //                             paddingTop: \"5px\",\r\n    //                             fontFamily: \"IRANSansMobile_Light\",\r\n    //                             userSelect: \"none\"\r\n    //                         }}>ورود/ثبت\r\n    //                             نام</p>\r\n    //                     </div>\r\n    //\r\n    //                     <p style={{\r\n    //                         paddingTop: \"5px\",\r\n    //                         fontSize: \"15px\",\r\n    //                         fontFamily: \"IRANSansMobile_Light\",\r\n    //                         userSelect: \"none\"\r\n    //                     }}>\r\n    //                         لطفا شماره ی خود را وارد کنید\r\n    //                     </p>\r\n    //                     <form onSubmit={this.handleSubmit}>\r\n    //                         <input className={this.state.inputclass} id=\"numin\" type=\"number\" style={inputStyle}\r\n    //                                onChange={this.handleInputChange}\r\n    //                                placeholder=\"09---------\"/>\r\n    //                         <br/>\r\n    //                         <button id=\"button\" type=\"submit\" className=\"btn\" style={smallButtonStyle}> ارسال کد\r\n    //                         </button>\r\n    //                     </form>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </Swipeable>\r\n    //         <BottomNavigation/>\r\n    //     </div>\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"app\" style={{height: \"100%\", textAlign: \"center\"}}>\r\n                <Swipeable onSwipedDown={() => {\r\n                    this.props.frontStatesPageSize(\"small\")\r\n                }} preventDefaultTouchmoveEvent={true}>\r\n                    <div className=\"contain \" style={{width: \"100%\", position: \"absolute\", bottom: \"0\", height: \"100%\"}}>\r\n                        <div className=\"inside\" style={bigMainContainerStyle}>\r\n                            <div className='headerOfLogin'>\r\n                                <div className='userIcon'></div>\r\n                                <p style={{\r\n                                    paddingTop: \"5px\",\r\n                                    fontFamily: \"IRANSansMobile_Light\",\r\n                                    userSelect: \"none\"\r\n                                }}>ورود/ثبت\r\n                                    نام</p>\r\n                            </div>\r\n                            <div className='loginVector'></div>\r\n\r\n                            <p style={{\r\n                                paddingTop: \"20px\",\r\n                                fontSize: \"15px\",\r\n                                fontFamily: \"IRANSansMobile_Light\",\r\n                                userSelect: \"none\"\r\n                            }}>\r\n                                لطفا شماره ی خود را وارد کنید\r\n\r\n                            </p>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <input className={this.state.inputclass} id=\"numin\" type=\"number\" style={inputStyle}\r\n                                       onChange={this.handleInputChange}\r\n                                       placeholder=\"09---------\"/>\r\n                                <br/>\r\n                                <button id=\"button\" type=\"submit\" className=\"btn\" style={bigButtonStyle}> ارسال کد</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Swipeable>\r\n                <BottomNavigation/>\r\n            </div>\r\n        )\r\n\r\n        // if (this.props.pageSize === 'small') {\r\n        //     return (this.smallPage)\r\n        // } else {\r\n        //     return (this.bigPage)\r\n        // }\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        pageSize: store.reducerFrontStates.pageSize,\r\n        token: store.reducerUser.token,\r\n        sentVCode: store.reducerFrontStates.sentVCode,\r\n        name: store.reducerUser.name,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        frontStatesPageSize: actions.frontStatesPageSize,\r\n        setSendVCode: actions.setSentVCode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n//------------------------------------------ Styles --------------------------------------\r\nconst smallMainContainerStyle = {\r\n    background: \"rgb(255,251,251)\",\r\n    borderTopLeftRadius: \"18px\",\r\n    borderTopRightRadius: \"18px\",\r\n    bottom: \"0\",\r\n    marginLeft: \"8px\",\r\n    marginRight: \"8px\",\r\n    height: \"320px\",\r\n    boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    userSelect: \"none\"\r\n}\r\n\r\nconst bigMainContainerStyle = {\r\n    // background: \"linear-gradient( to bottom, #ffffff, rgb(228, 231, 231) 50%, #ffffff)\",\r\n    // // borderTopLeftRadius: \"18px\",\r\n    // // borderTopRightRadius: \"18px\",\r\n    // bottom: \"0\",\r\n    // marginLeft: \"8px\",\r\n    // marginRight: \"8px\",\r\n    // width: \"96%\",\r\n    // height: 'calc(100% - 30px)',\r\n    // boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    // userSelect: \"none\",\r\n    // position: \"absolute\",\r\n    // overflow:\"scroll\"\r\n\r\n\r\n    background: \"white\",\r\n    // borderTopLeftRadius: \"18px\",\r\n    // borderTopRightRadius: \"18px\",\r\n    bottom: \"0\",\r\n    // marginLeft: \"8px\",\r\n    // marginRight: \"8px\",\r\n    // width: \"100%\",\r\n    height: 'calc(100%)',\r\n    // boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    userSelect: \"none\",\r\n    position: \"absolute\",\r\n    overflow: \"scroll\",\r\n    width: '100%'\r\n\r\n}\r\n\r\nconst inputStyle = {\r\n    paddingTop: '5px',\r\n    borderRadius: \"50px\",\r\n    border: \"none\",\r\n    height: \"50px\",\r\n    width: \"80%\",\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    outline: \"none\",\r\n    background: '#FFF2DD',\r\n}\r\n\r\nconst smallButtonStyle = {\r\n    backgroundColor: \"#FAA21B\",\r\n    borderRadius: \"25px\",\r\n    width: \"90px\",\r\n    height: \"34px\",\r\n    marginTop: \"30px\",\r\n    fontFamily: \"IRANSansMobile_Light\",\r\n    paddingTop: \"6px\",\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n}\r\n\r\nconst bigButtonStyle = {\r\n    backgroundColor: \"#FAA21B\",\r\n    borderRadius: \"25px\",\r\n    width: \"90px\",\r\n    height: \"34px\",\r\n    marginTop: \"30px\",\r\n    fontFamily: \"IRANSansMobile_Light\",\r\n    paddingTop: \"6px\",\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n}\r\n\r\nconst topOfMainStyle = {\r\n    width: \"100%\",\r\n    boxShadow: \"0 4px 2px -2px rgba(0, 0, 0, 0.15)\",\r\n    paddingBottom: \"5px\"\r\n\r\n}\r\nconst avatarStyle = {\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    marginTop: \"-28px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/avatar.png) center no-repeat \",\r\n    backgroundSize: \"100%\"\r\n}\r\n\r\nconst menuIconStyle = {\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/menuIcon.png) center no-repeat \",\r\n    backgroundSize: \"100%\",\r\n    margin: \"10px 10px 0 0\"\r\n}\r\n\r\nconst logoStyle = {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/logo.png) center no-repeat \",\r\n    backgroundSize: \"100%\",\r\n    margin: \"10px 0 0 10px\"\r\n}\r\n\r\nconst vectorStyle = {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/lbv.png) center no-repeat \",\r\n    backgroundSize: \"100%\",\r\n    marginTop: \"20px\"\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\SignUp\\SignUp.js",["191","192","193","194","195","196","197","198","199","200","201","202"],"import React from \"react\";\r\n// import '../../reduxStore0.011004/bootstrap.min.css'\r\nimport 'animate.css/animate.css'\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport DatePicker from 'react-modern-calendar-datepicker';\r\nimport {jalaliToGregorian} from \"../../usableFunctions/jalaliToGregorian\";\r\nimport {gregorianToTimestamp} from \"../../usableFunctions/gregorianToTimestamp\";\r\nimport * as request from '../../ApiRequests/requests'\r\nimport * as fixNums from '../../usableFunctions/englishNumToPersianNum'\r\nimport * as fixNumber from '../../usableFunctions/englishNumToPersianNum'\r\nimport BottomNavigation from \"../BottomNavigation/BottomNavigation\";\r\nimport './style/style.css'\r\n\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    userBirthDayJalaliArray = fixNumber.fixNumbers(new Date((this.props.birthday > 1000) ? (this.props.birthday * 1000) : 974379661000).toLocaleDateString('fa-IR')).split(\"/\")\r\n    userBirthDayJalaliObject = {\r\n        year: parseInt(this.userBirthDayJalaliArray[0]),\r\n        month: parseInt(this.userBirthDayJalaliArray[1]),\r\n        day: parseInt(this.userBirthDayJalaliArray[2])\r\n    }\r\n\r\n    state = {\r\n        selectedDay: {\r\n            year: 1378,\r\n            month: 1,\r\n            day: 1\r\n        },\r\n        setSelectedDay: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        let datePikcerInput = document.getElementsByClassName('DatePicker');\r\n        datePikcerInput[0].style.display = \"content\";\r\n        datePikcerInput[0].style.width = \"100%\";\r\n    }\r\n\r\n    checkSignUp = (data) => {\r\n        if (data.statusCode === 200) {\r\n            request.getUserInfo()\r\n            this.props.history.push('/main')\r\n        } else {\r\n            console.log('someThing went wrong')\r\n        }\r\n    }\r\n    handleSubmit = (element) => {\r\n        element.preventDefault()\r\n        let name = document.getElementsByClassName('inputName')[0].value;\r\n        let job = document.getElementsByClassName('inputJob')[0].value;\r\n        let birthday = this.state.selectedDay;\r\n        let gregorianBirthday = jalaliToGregorian(birthday.year, birthday.month, birthday.day);\r\n        let timestamp = gregorianToTimestamp(gregorianBirthday);\r\n        request.signUpRequest(name, timestamp, job, this.checkSignUp)\r\n\r\n    }\r\n\r\n    selectedDay = (element) => {\r\n        this.state.selectedDay = element\r\n        document.getElementsByClassName('customDatepickerInput').value = fixNums.unfixNumber(this.state.selectedDay.year.toString()) + '/' + fixNums.unfixNumber(this.state.selectedDay.month.toString()) + '/' + fixNums.unfixNumber(this.state.selectedDay.day.toString())\r\n    }\r\n\r\n\r\n    renderCustomInput = ({ref}) => (\r\n        <input\r\n            id=\"birthdayInput\"\r\n            readOnly\r\n            ref={ref}\r\n            placeholder={this.userBirthDayJalaliArray.join(\"/\")}\r\n            className=\"form-control inputBirthday\"\r\n        />\r\n    )\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                direction: \"rtl\",\r\n                background: 'white',\r\n                zIndex: '2',\r\n                height: '100%'\r\n            }}>\r\n                <BottomNavigation/>\r\n\r\n                <div id='orderMoreDetails'>\r\n                    <div id='orderMoreDetailsHeader'>\r\n                        <span>{this.state.moreOrderDetailDate}</span>\r\n                    </div>\r\n                    <div id='orderMoreDetailsFirstRow'>\r\n                        <div id='orderMoreDetailsFirstRow1'>\r\n                            <span> اسم غذا</span>\r\n                        </div>\r\n                        <div id='orderMoreDetailsFirstRow2'>\r\n                            <span> تعداد</span>\r\n                        </div>\r\n                        <div id='orderMoreDetailsFirstRow3'>\r\n                            <span> قیمت پرداختی</span>\r\n                        </div>\r\n                        <div id='orderMoreDetailsFirstRow4'>\r\n                            <span> قیمت غذا</span>\r\n                        </div>\r\n                    </div>\r\n                    {/*Rows Of Foods*/}\r\n\r\n                    {this.state.moreOrderDetailRows}\r\n                </div>\r\n\r\n                <div className='signupContainer'>\r\n                    <div id='headerProfile' className=\"container\">\r\n                        <div id='profileHeader' dir=\"ltr\">\r\n                            <div>\r\n                                <div className='backButton' onClick={() => {\r\n                                    this.props.history.push('/main')\r\n                                }}/>\r\n                            </div>\r\n                            <div>\r\n                                <div\r\n                                    className='centerOfHeader d-flex flex-column justify-content-center align-items-center'>\r\n                                    <div className='userIcon'></div>\r\n                                    <span className=\"ProfileHeaderText pt-1\">ثبت مشخصات</span></div>\r\n                            </div>\r\n                            <div id='logOut'>\r\n                                <span id='logOutText'></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" \">\r\n                        <br/>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <div className=\"\">\r\n                                    <input id=\"nameInput\" placeholder=\"اسم و فامیل\" aria-describedby=\"basic-addon1\"\r\n                                           aria-label\r\n                                           className=\"form-control inputName\" style={{}} defaultValue={this.props.name}\r\n                                           type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <div className=\"\">\r\n                                    <input id=\"nameInput\" placeholder=\"شغل\" aria-describedby=\"basic-addon1\" aria-label\r\n                                           className=\"form-control inputJob\" style={{}} defaultValue={this.props.job}\r\n                                           type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <DatePicker\r\n                                        value={this.state.selectedDay}\r\n                                        onChange={this.selectedDay}\r\n                                        inputPlaceholder=\"تاریخ تولد\"\r\n                                        shouldHighlightWeekends locale=\"fa\"\r\n                                        renderInput={this.renderCustomInput}\r\n                                        calendarClassName=\"responsive-calendar\"\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='btnContainer'>\r\n                            <button id=\"button\" onClick={this.handleSubmit} type=\"submit\" value='edit' className=\"btn\"\r\n                                    style={smallButtonStyle}>\r\n                                تایید\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='profileHeader'></div>\r\n\r\n                    <div className='svec'></div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignUp;\r\n\r\n//------------------------------------------ Styles --------------------------------------\r\n\r\nconst MainContainerStyle = {\r\n    background: \"white\",\r\n    borderTopLeftRadius: \"18px\",\r\n    borderTopRightRadius: \"18px\",\r\n    bottom: \"0\",\r\n    marginLeft: \"8px\",\r\n    marginRight: \"8px\",\r\n    boxShadow: \"0 .5rem 1rem rgba(0, 0, 0, .25)\",\r\n    userSelect: \"none\",\r\n}\r\nconst inputNameStyle = {\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    height: \"50px\",\r\n    width: \"290px\",\r\n    textAlign: \"right\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    background: \"url(/img/name.png) no-repeat  7px 7px\",\r\n    backgroundSize: \"40px\",\r\n    backgroundPosition: \"98% 40%\",\r\n    backgroundColor: \"white\",\r\n    paddingRight: \"70px\",\r\n    marginTop: \"20px\"\r\n}\r\nconst inputjobStyle = {\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    height: \"50px\",\r\n    width: \"290px\",\r\n    textAlign: \"right\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    background: \"url(/img/bag.png) no-repeat  7px 7px\",\r\n    backgroundSize: \"40px\",\r\n    backgroundPosition: \"98%\",\r\n    backgroundColor: \"white\",\r\n    paddingRight: \"70px\",\r\n    marginTop: \"20px\",\r\n    transition: \"all 0.5s\"\r\n}\r\n\r\nconst smallButtonStyle = {\r\n    backgroundColor: \"#FAA21B\",\r\n    borderRadius: \"25px\",\r\n    width: \"90px\",\r\n    height: \"30px\",\r\n    marginTop: \"30px\",\r\n    fontFamily: \"IRANSansMobile_Light\",\r\n    paddingTop: \"5px\",\r\n    color: 'white',\r\n    fontWeight: 'bold'\r\n}\r\nconst inputBirthdayStyle = {\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    height: \"50px\",\r\n    width: \"290px\",\r\n    textAlign: \"right\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    background: \"url(/img/birth.png) no-repeat  7px 7px\",\r\n    backgroundSize: \"40px\",\r\n    backgroundPosition: \"98%\",\r\n    backgroundColor: \"white\",\r\n    paddingRight: \"70px\",\r\n    marginTop: \"20px\",\r\n    transition: \"all 0.5s\",\r\n    boxShadow: '0 .5rem 1rem rgba(0,0,0,.15)'\r\n}\r\nconst buttonStyle = {\r\n    backgroundColor: \"#FAA21B\",\r\n    borderRadius: \"15px\",\r\n    width: \"150px\",\r\n    height: \"50px\",\r\n    marginTop: \"50px\",\r\n    fontFamily: \"IRANSansMobile_Light\",\r\n    paddingTop: \"10px\",\r\n    marginBottom: \"60px\"\r\n}\r\nconst topOfMainStyle = {\r\n    width: \"100%\",\r\n    boxShadow: \"0 4px 2px -2px rgba(0, 0, 0, 0.15)\",\r\n    paddingBottom: \"5px\"\r\n}\r\nconst avatarStyle = {\r\n    width: \"60px\",\r\n    height: \"60px\",\r\n    marginTop: \"-28px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/avatar.png) center no-repeat \",\r\n    backgroundSize: \"100%\"\r\n}\r\nconst menuIconStyle = {\r\n    width: \"25px\",\r\n    height: \"25px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/menuIcon.png) center no-repeat \",\r\n    backgroundSize: \"100%\",\r\n    margin: \"10px 10px 0 0\"\r\n}\r\nconst logoStyle = {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    userSelect: \"none\",\r\n    background: \"url(img/logo.png) center no-repeat \",\r\n    backgroundSize: \"100%\",\r\n    margin: \"10px 0 0 10px\"\r\n}\r\n\r\n","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\MainPage.js",["203","204","205","206","207","208","209","210","211"],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\SplashScreenPage\\SplashScreen.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\ReserveTable\\ReserveTable.js",["212","213","214","215"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport moment from \"moment-jalaali\";\r\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport availableReservationTimes from \"./js/availableReserviationTimes\";\r\nimport './css/style.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faAngleUp} from '@fortawesome/free-solid-svg-icons'\r\nimport * as requests from \"../../ApiRequests/requests\"\r\nimport * as actions from \"../../reduxStore/actions\";\r\n\r\nfunction findTableBaseOnTime(timeUnit, tablesHList){\r\n    let tablesName = Object.keys(tablesHList);\r\n    let finalO = {}\r\n    tablesName.map(eachTableName=>{\r\n        if(tablesHList[eachTableName].indexOf(timeUnit) !== -1){\r\n            finalO[eachTableName] = tablesHList[eachTableName];\r\n        }\r\n    });\r\n    return finalO;\r\n}\r\n\r\nfunction selectedInMiddle(item, array, resultArrLength= 7){\r\n    if(array.length < resultArrLength)\r\n        resultArrLength = array.length;\r\n    let arr = [...array];\r\n    if(item === undefined || item.length <= 0)\r\n        return arr;\r\n    let itemStr = item.toString()\r\n    let itemIndex = arr.indexOf(item) < 0? arr.indexOf(itemStr) : arr.indexOf(item);\r\n    if(itemIndex < 0)\r\n        return arr;\r\n    if(arr.length%2 !== 0){\r\n        while (itemStr !== arr[(arr.length-1)/2].toString())\r\n            arr.push(arr.shift())\r\n    }else{\r\n        while (itemStr !== arr[(arr.length-2)/2].toString())\r\n            arr.push(arr.shift())\r\n    }\r\n    while (arr.length !== resultArrLength){\r\n        if(arr.length !== resultArrLength)\r\n            arr.pop()\r\n        if(arr.length !== resultArrLength)\r\n            arr.shift();\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\nfunction removeTimeFromAvailable(date, time, table, mainAvailableObject){\r\n    let newAO = JSON.parse(JSON.stringify(mainAvailableObject));\r\n    newAO[date].tableFreeHHours[table] =  newAO[date].tableFreeHHours[table].filter(i=> i.toString() !== time.toString())\r\n    newAO[date].AllFreeHHours =  [].concat.apply([], Object.values(newAO[date].tableFreeHHours)).filter((v, i, a) => a.indexOf(v) === i)\r\n    if(newAO[date].tableFreeHHours[table].length <= 0){\r\n        delete newAO[date].tableFreeHHours[table];\r\n    }\r\n    return newAO\r\n}\r\n\r\n\r\n\r\n\r\nfunction prepareRowDataForSendRequestReserveTable(finalReserveList){\r\n    let newFRT = JSON.parse(JSON.stringify(finalReserveList))\r\n    let dateTable = {} // {date_table: [,hours,]}\r\n    let finalObject = [] // [date:\"\", hours:[], table:\"\"]\r\n    //let sortedBaseDate = newFRT.sort((a,b) => {return b.date - a.date})\r\n    newFRT.map(eachReserve=>{\r\n        if(dateTable[eachReserve.date+\"_\"+eachReserve.table]){\r\n            dateTable[eachReserve.date+\"_\"+eachReserve.table].push(eachReserve.time);\r\n        }else{\r\n            dateTable[eachReserve.date+\"_\"+eachReserve.table] =  []\r\n            dateTable[eachReserve.date+\"_\"+eachReserve.table].push(eachReserve.time);\r\n        }\r\n    })\r\n    Object.keys(dateTable).map(eachDT=>{\r\n        finalObject.push(\r\n            {\r\n                date: eachDT.split(\"_\")[0],\r\n                table:eachDT.split(\"_\")[1],\r\n                hours:dateTable[eachDT],\r\n            }\r\n        )\r\n    })\r\n    return finalObject;\r\n}\r\n\r\nfunction sendRequestReservesList(reserveList){\r\n    reserveList.map(eachReserve=>{\r\n        let tableName = eachReserve.table\r\n        let hours = eachReserve.hours\r\n        let date = moment(eachReserve.date, 'jYYYY/jM/jD').unix();\r\n        requests.sendReserveTable(tableName, date, hours, callbackReserveTable)\r\n    })\r\n}\r\n\r\nfunction callbackReserveTable(res){\r\n    if(res.statusCode === 200){\r\n        console.log(res.data.reserveId)\r\n    }else{\r\n        console.log(res)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nclass ReserveTable extends Component {\r\n    findAvailableReserveTime = () =>{\r\n        return availableReservationTimes(this.props.openTimes, this.props.reservedTableList, this.props.allTableList)\r\n    }\r\n\r\n    state = {\r\n        mainAvailableObject:this.findAvailableReserveTime(),\r\n\r\n        selectedDay:\"\",\r\n        selectedTime:\"\",\r\n        selectedTable:\"\",\r\n\r\n        availableDates:[],\r\n        availableTimes:[],\r\n        availableTables:[],\r\n\r\n        finalReserveList:[], //[{date: \"\", time: \"\", table: \"\"}, ...]\r\n    }\r\n\r\n    componentDidMount() {\r\n        let availableTimes = this.state.mainAvailableObject;\r\n        let datesList = Object.keys(availableTimes);\r\n        this.setState({\r\n            selectedDay: datesList[0],\r\n            selectedTime:availableTimes[datesList[0]].AllFreeHHours[0],\r\n            selectedTable: Object.keys(findTableBaseOnTime(availableTimes[datesList[0]].AllFreeHHours[0], availableTimes[datesList[0]].tableFreeHHours))[0],\r\n\r\n            availableDates:datesList,\r\n            availableTimes:availableTimes[datesList[0]].AllFreeHHours,\r\n            availableTables:findTableBaseOnTime(availableTimes[datesList[0]].AllFreeHHours[0], availableTimes[datesList[0]].tableFreeHHours),\r\n        })\r\n    }\r\n\r\n    changeDate = (newDate) =>{\r\n        let availableTimes = this.state.mainAvailableObject;\r\n        this.setState({\r\n            selectedDay: newDate,\r\n            selectedTime:availableTimes[newDate].AllFreeHHours[0],\r\n            selectedTable: Object.keys(findTableBaseOnTime(availableTimes[newDate].AllFreeHHours[0], availableTimes[newDate].tableFreeHHours))[0],\r\n\r\n            availableTimes:availableTimes[newDate].AllFreeHHours,\r\n            availableTables:findTableBaseOnTime(availableTimes[newDate].AllFreeHHours[0], availableTimes[newDate].tableFreeHHours),\r\n        })\r\n    }\r\n\r\n    changeHour = (newHHour) =>{\r\n        let availableTimes = this.state.mainAvailableObject;\r\n        let availableTables = findTableBaseOnTime(newHHour, availableTimes[this.state.selectedDay].tableFreeHHours)\r\n        this.setState({\r\n            selectedTime:newHHour,\r\n            availableTables: availableTables,\r\n        })\r\n        if(!Object.keys(this.state.availableTables).includes(this.state.selectedTable)){\r\n            this.setState({\r\n                selectedTable: Object.keys(availableTables)[0],\r\n            })\r\n        }\r\n    }\r\n\r\n    changeTable = (newTable) =>{\r\n        this.setState({\r\n            selectedTable:newTable,\r\n        })\r\n    }\r\n\r\n    handleBackPage = ()=>{\r\n        this.props.setHeaderOrder([\"profile\",'logo','menu'])\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    handleDayUp = () =>{\r\n        let datesList = selectedInMiddle(this.state.selectedDay ,this.state.availableDates );\r\n        this.changeDate(datesList.length%2 !== 0 ? datesList[(datesList.length+1)/2] : datesList[datesList.length/2]);\r\n    }\r\n\r\n\r\n    handleDayDown = () =>{\r\n        let datesList = selectedInMiddle(this.state.selectedDay ,this.state.availableDates );\r\n        this.changeDate(datesList.length%2 !== 0 ? datesList[(datesList.length+1)/2-2] : datesList[datesList.length/2-2]);\r\n    }\r\n\r\n    handleTimeUp = () =>{\r\n        let hoursList = selectedInMiddle(this.state.selectedTime ,this.state.availableTimes );\r\n        this.changeHour(hoursList.length%2 !== 0 ? hoursList[(hoursList.length+1)/2] : hoursList[hoursList.length/2]);\r\n    }\r\n\r\n    handleTimeDown = () =>{\r\n        let hoursList = selectedInMiddle(this.state.selectedTime ,this.state.availableTimes );\r\n        this.changeHour(hoursList.length%2 !== 0 ? hoursList[(hoursList.length+1)/2-2] : hoursList[hoursList.length/2-2]);\r\n    }\r\n\r\n    handleTableUp = () =>{\r\n        let tableList = selectedInMiddle(this.state.selectedTable ,Object.keys(this.state.availableTables) );\r\n        this.changeTable(tableList.length%2 !== 0 ? tableList[(tableList.length+1)/2] : tableList[tableList.length/2]);\r\n    }\r\n\r\n    handleTableDown = () =>{\r\n        let tableList = selectedInMiddle(this.state.selectedTable ,Object.keys(this.state.availableTables) );\r\n        this.changeTable(tableList.length%2 !== 0 ? tableList[(tableList.length+1)/2-2] : tableList[tableList.length/2-2]);\r\n    }\r\n\r\n    handleAddReserveTime = () =>{\r\n        if(this.state.selectedTable === undefined || this.state.selectedTime === undefined || this.state.mainAvailableObject[this.state.selectedDay].tableFreeHHours[this.state.selectedTable] === undefined || this.state.mainAvailableObject[this.state.selectedDay].tableFreeHHours[this.state.selectedTable].length <= 0)\r\n            return false\r\n\r\n        let hoursList = selectedInMiddle(this.state.selectedTime ,this.state.availableTimes );\r\n\r\n        let reserveO = {\r\n            date: this.state.selectedDay,\r\n            time: this.state.selectedTime,\r\n            table: this.state.selectedTable,\r\n        }\r\n        let reserves = [...this.state.finalReserveList, reserveO];\r\n\r\n        let newMA = removeTimeFromAvailable(reserveO.date, reserveO.time, reserveO.table, this.state.mainAvailableObject)\r\n        this.handleTimeUp()\r\n\r\n        let nextAvailableH = hoursList.length%2 !== 0 ? hoursList[(hoursList.length+1)/2] : hoursList[hoursList.length/2];\r\n        let availableTables = findTableBaseOnTime(nextAvailableH, newMA[reserveO.date].tableFreeHHours)\r\n\r\n        this.setState({\r\n            finalReserveList: reserves,\r\n            mainAvailableObject: newMA,\r\n\r\n            availableTimes:newMA[reserveO.date].AllFreeHHours,\r\n            availableTables:availableTables,\r\n        })\r\n    }\r\n\r\n\r\n    handleFinalSubmit = () =>{\r\n        let reserveList = prepareRowDataForSendRequestReserveTable(this.state.finalReserveList);\r\n        sendRequestReservesList(reserveList);\r\n    }\r\n\r\n    handleDeleteReserve = (reserveObject)=>{\r\n        let newFinalReserve = this.state.finalReserveList.filter(eachReserve=> ((eachReserve.date !== reserveObject.date) || (eachReserve.time !== reserveObject.time) || (eachReserve.table !== reserveObject.table)))\r\n        this.setState({\r\n            finalReserveList: newFinalReserve,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:\"100%\", height:\"100%\"}}>\r\n                <button onClick={this.handleBackPage}>برگشت</button>\r\n\r\n                <div className='tableReserveMain shadow'>\r\n                    <div id=\"selectDateId\">\r\n                        {/*<button onClick={this.handleDayUp}>date up</button>*/}\r\n                        <div onClick={this.handleDayDown} className='upDownContainers'>\r\n                            <FontAwesomeIcon icon={faAngleUp}/>\r\n                        </div>\r\n\r\n                        {selectedInMiddle(this.state.selectedDay ,this.state.availableDates ).map((eachDate, index) =>{\r\n                            // highlight selected item\r\n                            if(eachDate === this.state.selectedDay)\r\n                                return <div key={\"date_\"+index} style={{fontWeight: \"bold\"}}>{eachDate}</div>\r\n\r\n                            // else show them normal\r\n                            return <div key={\"date_\"+index}>{eachDate}</div>\r\n\r\n                        })}\r\n\r\n                        {/*<button onClick={this.handleDayDown}>date down</button>*/}\r\n\r\n                        <div onClick={this.handleDayUp} className='upDownContainers'>\r\n                            <FontAwesomeIcon icon={faAngleDown}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    <div id=\"selectTimeId\">\r\n                        {/*<button onClick={this.handleTimeUp}>time up</button>*/}\r\n                        <div onClick={this.handleTimeDown} className='upDownContainers'>\r\n                            <FontAwesomeIcon icon={faAngleUp}/>\r\n                        </div>\r\n\r\n                        {selectedInMiddle(this.state.selectedTime,this.state.availableTimes ).map((eachTime, index) =>{\r\n                            // highlight selected item\r\n                            if(eachTime === this.state.selectedTime)\r\n                                return (\r\n                                    <div key={\"time_\"+index} style={{fontWeight: \"bold\"}}>\r\n                                        <span>{eachTime%2===0? ( eachTime/2+\":00\" ) : ( (eachTime-1)/2+\":30\" )}</span> <span> - </span> <span>{eachTime%2===0? ( eachTime/2+\":30 \" ) : ( (eachTime+1)/2+\":00 \" )}</span>\r\n                                    </div>)\r\n\r\n                            // else show them normal\r\n                            return (\r\n                                <div key={\"time_\"+index}>\r\n                                    <span>{eachTime%2===0? ( eachTime/2+\":00\" ) : ( (eachTime-1)/2+\":30\" )}</span> <span> - </span> <span>{eachTime%2===0? ( eachTime/2+\":30 \" ) : ( (eachTime+1)/2+\":00 \" )}</span>\r\n                                </div>)\r\n                        })}\r\n\r\n                        {/*<button onClick={this.handleTimeDown}>time down</button>*/}\r\n                        <div onClick={this.handleTimeUp} className='upDownContainers'>\r\n                            <FontAwesomeIcon icon={faAngleDown}/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <br/>\r\n\r\n                    <div id=\"selectTableId\">\r\n                        {/*<button onClick={this.handleTableUp}>table up</button>*/}\r\n                        <div onClick={this.handleTableDown} className='upDownContainers'>\r\n                            <FontAwesomeIcon icon={faAngleUp}/>\r\n                        </div>\r\n                        {selectedInMiddle(this.state.selectedTable ,Object.keys(this.state.availableTables)).map((eachTable, index) =>{\r\n                            // highlight selected item\r\n                            if(eachTable === this.state.selectedTable)\r\n                                return <div key={\"table_\"+index} style={{fontWeight: \"bold\"}}>{eachTable}</div>\r\n\r\n                            // else show them normal\r\n                            return <div key={\"table_\"+index}>{eachTable}</div>\r\n                        })}\r\n\r\n                        {/*<button onClick={this.handleTableDown}>table down</button>*/}\r\n                        <div onClick={this.handleTableUp} className='upDownContainers'>\r\n                            <FontAwesomeIcon icon={faAngleDown}/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'center'}}>\r\n                    <button className='btn btn-warning btnAdd' onClick={this.handleAddReserveTime}>افزودن</button>\r\n                </div>\r\n\r\n\r\n                    <div id=\"reserveList\">\r\n\r\n                        {this.state.finalReserveList.map(eachReserve=>{\r\n                            return(\r\n                                // eachReserve.date + \" ==>  \" + eachReserve.time + \" ==> \" + eachReserve.table +\"   ****   \"\r\n                                <div key={eachReserve.date + eachReserve.time + eachReserve.table} style={{width:'100%',display:'flex',justifyContent:'center'}}>\r\n                                    <span className=\"eachTableReserved\">{ eachReserve.date + eachReserve.time + eachReserve.table } </span>\r\n                                    <button onClick={()=>{this.handleDeleteReserve(eachReserve)}}>حذف</button>\r\n                                </div>\r\n                            )\r\n\r\n                        })\r\n                        }\r\n\r\n                    </div>\r\n                <div style={{width:'100%',display:'flex',justifyContent:'center'}}>\r\n                    <button onClick={this.handleFinalSubmit} className=\"btn btn-outline-success\" id=\"submitFinal\">ثبت نهایی</button>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        openTimes: state.reducerRestaurant.restaurantInfo.open_time ? JSON.parse(state.reducerRestaurant.restaurantInfo.open_time) : {0:[], 1:[], 2:[], 3:[], 4:[], 5:[], 6:[]} ,\r\n        reservedTableList : state.reducerRestaurant.reservedTableList ? state.reducerRestaurant.reservedTableList : [] ,\r\n        allTableList: state.reducerRestaurant.allTableList ? state.reducerRestaurant.allTableList : [],\r\n    };\r\n}\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        setHeaderOrder: actions.frontStatesHeaderOrder\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ReserveTable);\r\n\r\n\r\n// <button onClick={this.handleReset}>از اول</button>\r\n// <span>{this.state.night? \"شب\" : \"روز\" }</span>\r\n// <div id=\"containerSelectAmpm\">\r\n//     <Switch\r\n//         checked={this.state.night}\r\n//         onChange={this.handleSelectNight}\r\n//         handleDiameter={28}\r\n//         offColor=\"#faa21b\"\r\n//         onColor=\"#292e2e\"\r\n//         offHandleColor=\"#fff\"\r\n//         onHandleColor=\"#fff\"\r\n//         height={40}\r\n//         width={120}\r\n//         uncheckedIcon={\r\n//             <div\r\n//                 style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     height: \"100%\",\r\n//                     fontSize: 15,\r\n//                     color: \"black\",\r\n//                     paddingRight: 2\r\n//                 }}\r\n//             >\r\n//                 روز\r\n//             </div>}\r\n//         checkedIcon={\r\n//             <div\r\n//                 style={{\r\n//                     display: \"flex\",\r\n//                     justifyContent: \"center\",\r\n//                     alignItems: \"center\",\r\n//                     height: \"100%\",\r\n//                     fontSize: 15,\r\n//                     color: \"#fff\",\r\n//                     paddingRight: 2\r\n//                 }}\r\n//             >\r\n//                 شب\r\n//             </div>}\r\n//     />\r\n// </div>\r\n// <div id='containerSelectDate' style={{display:this.state.step===1? \"block\" : \"none\"}}>\r\n//\r\n//     <DatePicker\r\n//         value={this.state.date}\r\n//         onChange={this.handleSelectDate}\r\n//         inputPlaceholder=\"تاریخ\"\r\n//         shouldHighlightWeekends\r\n//         locale=\"fa\"\r\n//         calendarClassName=\"responsive-calendar\"\r\n//     />\r\n//\r\n// </div>\r\n//\r\n// <div id='containerSelectHour'>\r\n//\r\n// </div>\r\n//\r\n// <div id='containerSelectTable'>\r\n//\r\n// </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <div>\r\n//     <MuiPickersUtilsProvider utils={MomentUtils}>\r\n//         <KeyboardTimePicker\r\n//             autoOk\r\n//             showTodayButton\r\n//             ampm={false}\r\n//             mask=\"__:__\"\r\n//             invalidDateMessage=\"ساعت نامعتبر\"\r\n//             label=\"از...\"\r\n//             value={this.state.startH}\r\n//             onChange={this.handleChangeStartH}\r\n//         />\r\n//\r\n//         <KeyboardTimePicker\r\n//             autoOk\r\n//             showTodayButton\r\n//             ampm={false}\r\n//             mask=\"__:__\"\r\n//             invalidDateMessage=\"ساعت نامعتبر\"\r\n//             label=\"تا...\"\r\n//             value={this.state.endH}\r\n//             onChange={this.handleChangeEndH}\r\n//             KeyboardButtonProps={{\r\n//                 'aria-label': 'change time',\r\n//             }}\r\n//         />\r\n//\r\n//         <DatePicker\r\n//             value={this.state.date}\r\n//             onChange={this.handleSelectDate}\r\n//             inputPlaceholder=\"تاریخ\"\r\n//             shouldHighlightWeekends\r\n//             locale=\"fa\"\r\n//             calendarClassName=\"responsive-calendar\"\r\n//         />\r\n//     </MuiPickersUtilsProvider>\r\n// </div>","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\BillPage\\Bill.js",["216"],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\Tour360page\\Tour360.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MoreOptions\\MoreOptions.js",["217"],"import React from \"react\";\r\nimport * as actions from \"../../reduxStore/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport '../MoreOptions/style/style.css'\r\n\r\n\r\n\r\n\r\nclass MoreOptions extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className='moreOptionsContainer'>\r\n                    <div className='backButton' onClick={()=>{\r\n                        this.props.history.push('/main')\r\n                    }}/>\r\n                    <div className='Options'>\r\n                        <div className='eachOption' onClick={()=>{\r\n                            this.props.history.push('/about')\r\n                        }}>\r\n                            <div className='aboutDiv'/>\r\n                            <span className='aboutText'> معرفی رستوران</span>\r\n                        </div>\r\n                        <div className='eachOption'>\r\n                            <div className='reserveDiv'/>\r\n                            <span className='aboutText'>رزرو میز</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center align-items-center w-100 position-absolute bottom-0\">\r\n                        <div className='moreVector'/>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreOptions);","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\PayWay\\PayWay.js",["218","219","220","221","222","223","224","225","226"],"import React from \"react\";\r\nimport './style/style.css'\r\nimport * as actions from \"../../reduxStore/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport * as requests from \"../../ApiRequests/requests\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst ReactSwal = withReactContent(Swal)\r\n\r\n\r\nclass payWay extends React.Component {\r\n\r\n    createInitAllToSelectedToPay = (orderList) =>{\r\n        return orderList.map(eFood=>{\r\n            return {\r\n                id:eFood.foods_id,\r\n                tPrice: eFood.number * eFood.price,\r\n                number: eFood.number,\r\n            }\r\n        })\r\n    }\r\n\r\n    state = {\r\n        table: this.props.table,\r\n        address:this.props.address,\r\n        payWay: 'online',\r\n        dong: true,\r\n        orderList: [],\r\n        inOut: 'inRes',\r\n        totalPrice: 0,\r\n        selectedFoodToPay: this.createInitAllToSelectedToPay(this.props.orderList),\r\n        paidFoods: [],\r\n        orderListPaidNotIncluded: this.props.orderList,\r\n    }\r\n    //switch option and inits\r\n    payOptions = [\r\n        {\r\n            label: \"آنلاین\",\r\n            value: 'online',\r\n            selectedBackgroundColor: \"#34B3C6\",\r\n\r\n        },\r\n        {\r\n            label: \"نقدی\",\r\n            value: \"cash\",\r\n            selectedBackgroundColor: \"#34B3C6\"\r\n        }\r\n    ];\r\n    payInit = this.payOptions.findIndex(({value}) => value === \"online\");\r\n    inOutOptions = [\r\n        {\r\n            label: \"بیرون بر\",\r\n            value: \"outRes\",\r\n            selectedBackgroundColor: \"#34B3C6\"\r\n        },\r\n        {\r\n            label: \"درون رستوران\",\r\n            value: \"inRes\",\r\n            selectedBackgroundColor: \"#34B3C6\",\r\n\r\n        }\r\n\r\n    ];\r\n    inOutInit = this.inOutOptions.findIndex(({value}) => value === 'inRes');\r\n\r\n    dongOptions = [\r\n        {\r\n            label: \"دونگی\",\r\n            value: true,\r\n            selectedBackgroundColor: \"#34B3C6\",\r\n\r\n        },\r\n        {\r\n            label: \"کلی\",\r\n            value: false,\r\n            selectedBackgroundColor: \"#34B3C6\"\r\n        }\r\n\r\n\r\n    ];\r\n    dongInit = this.dongOptions.findIndex(({value}) => value === true);\r\n\r\n\r\n    componentDidMount() {\r\n        let totalPrice = 0;\r\n        for (let i = 0; i <= this.props.orderList.length; i++) {\r\n            if (this.props.orderList[i]) {\r\n                totalPrice = totalPrice + this.props.orderList[i].price * this.props.orderList[i].number\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            orderList: this.createFoodsToSelectToPay(this.props.orderList, this.state.selectedFoodToPay),\r\n            totalPrice: totalPrice\r\n        })\r\n\r\n        if (this.props.trackingId > 100) {\r\n            this.getPaidItemsInfo(this.props.trackingId)\r\n        }\r\n\r\n\r\n        let inResFields = document.getElementsByClassName('inResFields')\r\n        let outResFields = document.getElementsByClassName('outResFields')\r\n        let addressInput = document.getElementsByClassName('addressInput')\r\n        outResFields[0].style.height = 0\r\n        outResFields[0].style.opacity = 0\r\n        outResFields[0].style.pointerEvents = \"none\"\r\n        inResFields[0].style.height = '60px'\r\n        inResFields[0].style.opacity = 1\r\n        inResFields[0].style.pointerEvents = \"all\"\r\n        addressInput[0].value = ''\r\n        this.dongSwitchOnChange(true)\r\n        this.paySwitchOnChange('online')\r\n    }\r\n\r\n\r\n    createFoodsToSelectToPay = (orderList, selectedFoods) => {\r\n        return orderList.map(eachFood => {\r\n            let foodInSelectedItemToPay = selectedFoods.filter(eFood => eFood.id === eachFood.foods_id)[0];\r\n\r\n            return (\r\n                <div key={eachFood.foods_id} className='dongTableEachRow'>\r\n                    {eachFood.number > 0 ?\r\n                        <div>{eachFood.number} <br/> {eachFood.number * eachFood.price}</div>\r\n                        :\r\n                        <div>پرداخت شده</div>}\r\n                    <div>\r\n                        {(foodInSelectedItemToPay && foodInSelectedItemToPay.number >= 0) ? foodInSelectedItemToPay.number * eachFood.price : eachFood.number * eachFood.price}\r\n                    </div>\r\n                    <div>{eachFood.name}</div>\r\n                    <div>\r\n                        <input defaultValue={eachFood.number} disabled={eachFood.number > 0 ?false:true} className='dongNumberOfFoodsInput' type=\"number\" key={eachFood.price}\r\n                               onChange={(element) => {\r\n                                   this.eachFoodInputChanged(element, eachFood.number, eachFood.price, eachFood.foods_id)\r\n                               }}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    sumOfFoodPrices = (number, price, id) => {\r\n        let otherFoods = [...this.state.selectedFoodToPay.filter(eFood => eFood.id !== id)]\r\n        let foodUpdated = {id: id, tPrice: number * price, number: number};\r\n        let updatedAllFoods = [...otherFoods, foodUpdated]\r\n        // update table list\r\n        this.setState({\r\n            selectedFoodToPay: updatedAllFoods,\r\n            orderList: this.createFoodsToSelectToPay(this.state.orderListPaidNotIncluded, updatedAllFoods),\r\n        })\r\n    }\r\n\r\n\r\n    eachFoodInputChanged = (input, foodNumber, price, id) => {\r\n        if (input.target.value > foodNumber )\r\n            input.target.value = foodNumber\r\n        else if(input.target.value === \"\"){\r\n            this.sumOfFoodPrices(0, price, id);\r\n            return false;\r\n        }\r\n        this.sumOfFoodPrices(parseInt(input.target.value), price, id);\r\n        if (this.props.trackingId > 100) {\r\n            this.getPaidItemsInfo(this.props.trackingId)\r\n        }\r\n    }\r\n\r\n    backClicked = () => {\r\n        this.props.history.push('/bill')\r\n    }\r\n\r\n\r\n\r\n    paySwitchOnChange = (state) => {\r\n        this.setState({\r\n            payWay: state.toString(),\r\n        })\r\n        this.props.setHowToPay(state.toString())\r\n\r\n        let dongSwitch = document.getElementsByClassName('switchWrapperDong');\r\n        let table = document.getElementsByClassName('dongTable')\r\n\r\n        if (state === 'cash') {\r\n            dongSwitch[0].style.opacity = 0\r\n            dongSwitch[0].style.pointerEvents = \"none\";\r\n\r\n            table[0].style.height = \"0px\"\r\n            table[0].style.padding = \"0\"\r\n            this.props.setHowToPay('cash')\r\n\r\n        } else {\r\n            dongSwitch[0].style.opacity = 1\r\n            dongSwitch[0].style.pointerEvents = \"all\";\r\n            table[0].style.pointerEvents = \"all\";\r\n            this.props.setHowToPay('online')\r\n\r\n            if (this.state.dong) {\r\n                table[0].style.height = \"300px\"\r\n                table[0].style.padding = \"10px 5px\"\r\n            }\r\n        }\r\n    }\r\n\r\n    dongSwitchOnChange = (state) => {\r\n        this.setState({\r\n            dong: state\r\n        })\r\n        let table = document.getElementsByClassName('dongTable')\r\n\r\n        if (state) {\r\n            table[0].style.height = \"300px\"\r\n            table[0].style.padding = \"10px 5px\"\r\n        } else {\r\n            table[0].style.height = \"0px\"\r\n            table[0].style.padding = \"0\"\r\n        }\r\n    }\r\n\r\n    inOutSwitchOnChange = (state) => {\r\n        this.setState({\r\n            inOut: state\r\n        })\r\n        let inResFields = document.getElementsByClassName('inResFields')\r\n        let outResFields = document.getElementsByClassName('outResFields')\r\n        let tableInput = document.getElementsByClassName('tableNumberInput')\r\n        let addressInput = document.getElementsByClassName('addressInput')\r\n\r\n        if (state === 'outRes') {\r\n            this.props.setHowToDeliver('outRestaurant')\r\n            inResFields[0].style.height = 0\r\n            inResFields[0].style.opacity = 0\r\n            inResFields[0].style.pointerEvents = \"none\"\r\n            outResFields[0].style.height = '60px'\r\n            outResFields[0].style.opacity = 1\r\n            outResFields[0].style.pointerEvents = \"all\"\r\n            tableInput[0].value = ''\r\n\r\n\r\n        } else {\r\n            this.props.setHowToDeliver('inRestaurant')\r\n\r\n            outResFields[0].style.height = 0\r\n            outResFields[0].style.opacity = 0\r\n            outResFields[0].style.pointerEvents = \"none\"\r\n            inResFields[0].style.height = '60px'\r\n            inResFields[0].style.opacity = 1\r\n            inResFields[0].style.pointerEvents = \"all\"\r\n            addressInput[0].value = ''\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleChangeAddress = (elem) =>{\r\n        this.setState({\r\n            address: elem.target.value,\r\n        })\r\n    }\r\n\r\n    tableNumberChange = (input) => {\r\n        if (input.target.value.toString().length >= 3) {\r\n            input.target.value = input.target.value.toString().slice(0, 3)\r\n            this.setState({\r\n                table: input.target.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmitClicked = () => {\r\n        let sumOfFoods = 0;\r\n        this.state.selectedFoodToPay.map(eFood => {\r\n            if (eFood.number > 0)\r\n                sumOfFoods += eFood.tPrice;\r\n        })\r\n        if (sumOfFoods < 100){\r\n            ReactSwal.fire({\r\n                title: 'حداقل یه چیز رو واسه پرداخت انتخاب کن',\r\n                icon: 'info',\r\n                confirmButtonText: \"عه حواسم نبود، اوکیه\",\r\n            })\r\n            return false;\r\n        }\r\n\r\n\r\n\r\n        let paymentStatus = this.state.payWay === 'online' ? 8 : 85;\r\n        let [table, address] = this.state.inOut === 'inRes' ? [this.state.table, \"\"] : [\"\", this.state.address];\r\n\r\n        let canHePay = (this.state.inOut === 'outRes' && address.length > 5) || (this.state.inOut === 'inRes' && table > 0)\r\n\r\n\r\n        if (canHePay === true && sumOfFoods > 100){\r\n            if (this.props.trackingId > 1000){\r\n                ReactSwal.fire({\r\n                    title: 'یه سفارش باز داری',\r\n                    icon: 'info',\r\n                    confirmButtonText: \"میخوام دونگ همون قبلی رو بپردازم\",\r\n                    showDenyButton: true,\r\n                    denyButtonText: 'میدونم؛ یه سفارش  جدید دارم',\r\n                    text: ((this.state.dong && paymentStatus === 8) ?\r\n                        'قیمت این یکی دونگ: ' + sumOfFoods / 1000 + \" تومن \\n\" : \"\") +\r\n                        'قیمت کل  فاکتور: ' + this.state.totalPrice / 1000 + \" تومن \\n\",\r\n                }).then(result => {\r\n                    if (result.isConfirmed) {\r\n                        requests.sendPaymentRequestFood(this.state.selectedFoodToPay, sumOfFoods, this.props.trackingId, this.callbackPaymentRequest);\r\n                    }else {\r\n                        this.createNewOpenOrder(table, address, paymentStatus, sumOfFoods);\r\n                    }\r\n                })\r\n            }else {\r\n                ReactSwal.fire({\r\n                    title: 'خب در مجموع',\r\n                    icon: 'info',\r\n                    confirmButtonText: 'اره سفارشمو ثبت کن',\r\n                    showDenyButton: true,\r\n                    denyButtonText: \"نه وایسا یه چیزو عوض کنم\",\r\n                    text: ((this.state.dong && paymentStatus === 8) ?\r\n                        'قیمت این یکی دونگ: ' + sumOfFoods / 1000 + \" تومن \\n\" : \"\") +\r\n                        'قیمت کل  فاکتور: ' + this.state.totalPrice / 1000 + \" تومن \\n\",\r\n                }).then(result => {\r\n                    if (result.isConfirmed) {\r\n                        if (this.props.trackingId < 1000) {\r\n                            this.createNewOpenOrder(table, address, paymentStatus, sumOfFoods);\r\n                        } else {\r\n                            requests.sendPaymentRequestFood(this.state.selectedFoodToPay, sumOfFoods, this.props.trackingId, this.callbackPaymentRequest);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }else {\r\n            ReactSwal.fire({\r\n                title: 'نه صبر کن',\r\n                icon: 'info',\r\n                confirmButtonText: \"اها اوکیه وایسا\",\r\n                text: \"!یه چیز رو کامل وارد نکردی\"\r\n            })\r\n        }\r\n    }\r\n\r\n    createNewOpenOrder = (table, address, paymentStatus, sumOfFoods) =>{\r\n        this.props.setTable(table)\r\n        this.props.setAddress(address)\r\n        this.sendOrderRequestAsync(table, address, paymentStatus).then(OResult => {\r\n            if (OResult.statusCode === 200) {\r\n                this.props.setTrackingId(OResult.trackingId);\r\n                if (paymentStatus === 8) {\r\n                    requests.sendPaymentRequestFood(this.state.selectedFoodToPay, sumOfFoods, OResult.trackingId, this.callbackPaymentRequest);\r\n                } else {\r\n                    ReactSwal.fire({\r\n                        title: 'تمومه',\r\n                        icon: 'success',\r\n                        confirmButtonText: 'اوکیه',\r\n                        text: \"خب سفارشت رو ثبت کردیم، یکم دیگه آمادس :)\" + \"\\n\" +\r\n                            \" : شماره سفارش\" + OResult.trackingId\r\n                        ,\r\n                    })\r\n                }\r\n            } else {\r\n                ReactSwal.fire({\r\n                    title: '!!! آخ',\r\n                    icon: 'error',\r\n                    confirmButtonText: 'اوکیه',\r\n                    text: \"یه چیزی درست کار نکرد، میشه از اول امتحان کنی؟\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    callbackPaymentRequest = (res) => {\r\n        if (res.statusCode === 200) {\r\n            ReactSwal.fire({\r\n                title: 'تمومه',\r\n                icon: 'success',\r\n                confirmButtonText: 'بریم درگاه پرداخت',\r\n                showDenyButton: true,\r\n                denyButtonText: \"میخوام لینک پرداخت رو ارسال کنم واسه دوستم\",\r\n                denyButtonColor: \"#47b8e5\",\r\n                text: \"مبلغ : \" + res.data.amount / 1000 + \" تومن \\n\",\r\n            }).then(resultSwalPay => {\r\n                if (resultSwalPay.isConfirmed) {\r\n                    window.open(res.data.url, '_blank').focus()\r\n                } else if (resultSwalPay.isDenied) {\r\n                    navigator.clipboard.writeText(\r\n                        \"لینک پرداخت دونگ کوکی\" + \"\\n\" +\r\n                        \"مبلغ : \" + res.data.amount / 1000 + \" هزار تومن \\n\" + \"\\n\" +\r\n                        \" بزن روی لینک پایینی بری تو درگاه \" + \"\\n\"\r\n                        + res.data.url).then(() => {\r\n                        ReactSwal.fire(\"لینک توی کلیپ بورد ذخیره شد\")\r\n                    })\r\n\r\n                }\r\n            });\r\n        } else {\r\n            ReactSwal.fire({\r\n                title: '!!! آخ',\r\n                icon: 'error',\r\n                confirmButtonText: 'اوکیه',\r\n                text: \"یه چیزی درست کار نکرد، میشه از اول امتحان کنی؟\",\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    sendOrderRequestAsync = (table, address, paymentStatus) => {\r\n        return new Promise(function (resolve, reject) {\r\n            requests.sendOrder(table, address, paymentStatus, resolve)\r\n        });\r\n    }\r\n\r\n\r\n    getPaidItemsInfo = (trackingId) => {\r\n        requests.getPaymentInfoByTrackingId(trackingId, this.setPaidItemsToState)\r\n    }\r\n\r\n    setPaidItemsToState = (res) => {\r\n        if (res.statusCode === 200) {\r\n            let newSavedPaidItems = [];\r\n            res.data.map(ePaid => {\r\n                if (ePaid.isPaid && ePaid.itemType === \"food\") {\r\n                    let items = JSON.parse(ePaid.item);\r\n                    items.map(ePaidFood => {\r\n                        let flagUpdate = false\r\n                        newSavedPaidItems.map((eSavedPaidFood, index) => {\r\n                            if (ePaidFood.id === eSavedPaidFood.id) {\r\n                                flagUpdate = true;\r\n                                let newFoodNumber = ePaidFood.number + eSavedPaidFood.number;\r\n                                newSavedPaidItems[index] = {\r\n                                    id: eSavedPaidFood.id,\r\n                                    tPrice: newFoodNumber * ePaidFood.priceAfterDiscount,\r\n                                    number: newFoodNumber\r\n                                }\r\n                            }\r\n                        })\r\n                        if (!flagUpdate) {\r\n                            newSavedPaidItems.push({\r\n                                id: ePaidFood.id,\r\n                                tPrice: ePaidFood.number * ePaidFood.priceAfterDiscount,\r\n                                number: ePaidFood.number\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                let newOrderList = this.props.orderList.map(eOFood => {\r\n                    let newEOFood = JSON.parse(JSON.stringify(eOFood));\r\n                    let foodNumber = newEOFood.number;\r\n                    newSavedPaidItems.map(eSavedPaidFood => {\r\n                        if (newEOFood.foods_id === eSavedPaidFood.id)\r\n                            foodNumber = parseInt(newEOFood.number) - parseInt(eSavedPaidFood.number);\r\n                    });\r\n                    newEOFood.number = foodNumber;\r\n                    return newEOFood;\r\n                })\r\n                this.setState({\r\n                    paidFoods: newSavedPaidItems,\r\n                    orderList: this.createFoodsToSelectToPay(newOrderList, this.state.selectedFoodToPay),\r\n                    orderListPaidNotIncluded: newOrderList,\r\n                })\r\n            })\r\n        } else {\r\n            console.log(\"Some thing went wrong during fetching Paid Items\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='mainContainer-payWay'>\r\n                    <div className='payMain'>\r\n                        <div className='backButton' onClick={this.backClicked}/>\r\n                        <span className='payWayTextHolder'>نحوه پرداخت به په صورت باشد؟\r\n                    </span>\r\n                        <div className='switchContainer'>\r\n                            <div className='switchWrapperPay'>\r\n                                <SwitchSelector\r\n                                    onChange={this.paySwitchOnChange}\r\n                                    options={this.payOptions}\r\n                                    initialSelectedIndex={this.payInit}\r\n                                    backgroundColor={\"rgba(53,59,72,0)\"}\r\n                                    fontColor={\"#000\"}\r\n                                />\r\n                            </div>\r\n                            <div className='switchWrapperDong'>\r\n                                <SwitchSelector\r\n                                    onChange={this.dongSwitchOnChange}\r\n                                    options={this.dongOptions}\r\n                                    initialSelectedIndex={this.dongInit}\r\n                                    backgroundColor={\"rgba(53,59,72,0)\"}\r\n                                    fontColor={\"#000\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='dongTable shadow'>\r\n                            <div className='dongTableFirsRow'>\r\n                                <div>تعداد کل</div>\r\n                                <div>قیمت انتخابی</div>\r\n                                <div>اسم غذا</div>\r\n                                <div></div>\r\n                            </div>\r\n                            {this.state.orderList}\r\n\r\n                        </div>\r\n                        <span className=\"payWayTextHolder\">\r\n                        لطفا نحوه دریافت سفارش خود را انتخاب کنید\r\n                    </span>\r\n                        <div className='switchContainerInOut'>\r\n\r\n                            <div className='switchWrapperInOut'>\r\n                                <SwitchSelector\r\n                                    onChange={this.inOutSwitchOnChange}\r\n                                    options={this.inOutOptions}\r\n                                    initialSelectedIndex={this.inOutInit}\r\n                                    backgroundColor={\"rgba(53,59,72,0)\"}\r\n                                    fontColor={\"#000\"}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='tableNumberOrAddressContainer'>\r\n\r\n                            <div className='inResFields'>\r\n                                <span className='payWayTextHolder'>شماره میز</span>\r\n                                <br/>\r\n                                <input onChange={this.tableNumberChange} className='tableNumberInput shadow-sm'\r\n                                       type=\"number\" placeholder='000' defaultValue={this.props.table}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='tableNumberOrAddressContainer'>\r\n                            <div className='outResFields'>\r\n                                <span className='payWayTextHolder'> آدرس</span>\r\n                                <br/>\r\n                                <input onChange={this.handleChangeAddress} className='addressInput shadow-sm' type=\"text\" defaultValue={this.props.address}/>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className='submitButtonContainer'>\r\n                        <div onClick={this.handleSubmitClicked} className='submitButton shadow'>\r\n                            تایید\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        howToPay: store.reducerTempData.howToPay,\r\n        address: store.reducerTempData.address,\r\n        howToDeliver: store.reducerTempData.howToDeliver,\r\n        table: store.reducerTempData.table,\r\n        trackingId: store.reducerTempData.trackingId,\r\n        orderListRestaurant: store.reducerUser.orderListRestaurant,\r\n        orderList: store.reducerTempData.orderList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        setHowToPay: actions.setHowToPay,\r\n        setHowToDeliver: actions.setHowToDeliver,\r\n        setAddress: actions.setAddress,\r\n        setTable: actions.setTable,\r\n        setTrackingId: actions.setTrackingId,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(payWay);","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\OrderReport\\OrderReport.js",["227","228","229","230","231","232","233","234"],"import React from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown} from '@fortawesome/free-solid-svg-icons'\r\nimport './style/style.css'\r\nimport * as requests from './../../ApiRequests/requests'\r\nimport {connect} from \"react-redux\";\r\nimport * as fixnumbers from './../../usableFunctions/englishNumToPersianNum'\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst ReactSwal = withReactContent(Swal)\r\n\r\nclass OrderReport extends React.Component {\r\n\r\n    state = {\r\n        orderInfo: {},\r\n        orderList: [],\r\n        selectedFoodToPay: [],\r\n        paidFoods: [],\r\n        orderListPaidNotIncluded: [],\r\n        addressOrTable: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let orderInfo = this.props.openOrdersInfo[this.props.match.params.trackingId];\r\n        if (orderInfo === undefined) {\r\n            this.props.history.push('/openorders');\r\n        } else {\r\n            setInterval(() => {\r\n                this.getPaidItemsInfo(this.props.match.params.trackingId)\r\n            }, 3000)\r\n            this.getPaidItemsInfo(this.props.match.params.trackingId);\r\n            this.setState({\r\n                orderInfo: orderInfo,\r\n                orderListPaidNotIncluded: orderInfo.orderList,\r\n                orderList: this.createFoodsToSelectToPay(orderInfo.orderList, this.state.selectedFoodToPay),\r\n                addressOrTable: (orderInfo.address) ? orderInfo.address : fixnumbers.unfixNumber(orderInfo.orderTable.toString()),\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    createFoodsToSelectToPay = (orderList, selectedFoods) => {\r\n        return orderList.map(eachFood => {\r\n            let foodInSelectedItemToPay = selectedFoods.filter(eFood => eFood.id === eachFood.id)[0];\r\n            return (\r\n                <div key={eachFood.id} className='reportEachTable'>\r\n\r\n                    <div className='name-and-your-pay'>\r\n\r\n                        <div className='orderReportPriceTotal priceOrange'>\r\n\r\n                            {(foodInSelectedItemToPay && foodInSelectedItemToPay.number > 0) ? foodInSelectedItemToPay.number * eachFood.price : 0} T\r\n                        </div>\r\n                        <div className='orderReportPriceTotal mt-2'>{eachFood.number * eachFood.price} T</div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='name-and-your-pay'>\r\n                        <input className='dongNumberOfFoodsInput' disabled={eachFood.number>0 ? false:true} type=\"number\" key={eachFood.price}\r\n                               onChange={(element) => {\r\n                                   this.eachFoodInputChanged(element, eachFood.number, eachFood.price, eachFood.id)\r\n                               }}/>\r\n                        {eachFood.number > 0 ? <div className=\"mt-2\"> X{eachFood.number} </div> :\r\n                            <div>پرداخت شده</div>}\r\n                    </div>\r\n                    <div className='name-and-your-pay'>\r\n                        <span className='font-weight-bold'>پرداخت شما</span>\r\n                        <div className='mt-2'>{eachFood.name}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    eachFoodInputChanged = (input, foodNumber, price, id) => {\r\n        if (input.target.value > foodNumber) {\r\n            if (foodNumber < 0)\r\n                input.target.value = 0\r\n            else\r\n                input.target.value = foodNumber\r\n        }\r\n        this.sumOfFoodPrices(parseInt(input.target.value), price, id);\r\n\r\n        this.getPaidItemsInfo(this.props.match.params.trackingId)\r\n    }\r\n\r\n    sumOfFoodPrices = (number, price, id) => {\r\n        let otherFoods = [...this.state.selectedFoodToPay.filter(eFood => eFood.id !== id)]\r\n        let foodUpdated = {id: id, tPrice: number * price, number: number};\r\n        let updatedAllFoods = [...otherFoods, foodUpdated]\r\n        // update table list\r\n        this.setState({\r\n            selectedFoodToPay: updatedAllFoods,\r\n            orderList: this.createFoodsToSelectToPay(this.state.orderListPaidNotIncluded, updatedAllFoods),\r\n        })\r\n    }\r\n\r\n    handleSubmitClicked = () => {\r\n        let sumOfFoods = 0;\r\n        this.state.selectedFoodToPay.map(eFood => {\r\n            if (eFood.number > 0)\r\n                sumOfFoods += eFood.tPrice;\r\n        })\r\n        if (sumOfFoods < 100)\r\n            sumOfFoods = 0;\r\n\r\n        if (sumOfFoods > 100)\r\n            requests.sendPaymentRequestFood(this.state.selectedFoodToPay, sumOfFoods, this.props.match.params.trackingId, this.callbackPaymentRequest);\r\n        else {\r\n            ReactSwal.fire({\r\n                icon: 'warning',\r\n                confirmButtonText: 'عه، اوکیه',\r\n                text: \"!هیچی انتخاب نکردی که\",\r\n            })\r\n        }\r\n    }\r\n\r\n    callbackPaymentRequest = (res) => {\r\n        if (res.statusCode === 200) {\r\n            ReactSwal.fire({\r\n                title: 'تمومه',\r\n                icon: 'success',\r\n                confirmButtonText: 'بریم درگاه پرداخت',\r\n                showDenyButton: true,\r\n                denyButtonText: \"میخوام لینک پرداخت رو ارسال کنم واسه دوستم\",\r\n                denyButtonColor: \"#47b8e5\",\r\n                text: \"مبلغ : \" + res.data.amount / 1000 + \" تومن \\n\",\r\n            }).then(resultSwalPay => {\r\n                if (resultSwalPay.isConfirmed) {\r\n                    window.open(res.data.url, '_blank').focus()\r\n                } else if (resultSwalPay.isDenied) {\r\n                    navigator.clipboard.writeText(\r\n                        \"لینک پرداخت دونگ کوکی\" + \"\\n\" +\r\n                        \"مبلغ : \" + res.data.amount / 1000 + \" هزار تومن \\n\" + \"\\n\" +\r\n                        \" بزن روی لینک پایینی بری تو درگاه \" + \"\\n\"\r\n                        + res.data.url).then(() => {\r\n                        ReactSwal.fire(\"لینک توی کلیپ بورد ذخیره شد\")\r\n                    })\r\n\r\n                }\r\n            });\r\n        } else {\r\n            ReactSwal.fire({\r\n                title: '!!! آخ',\r\n                icon: 'error',\r\n                confirmButtonText: 'اوکیه',\r\n                text: \"یه چیزی درست کار نکرد، میشه از اول امتحان کنی؟\",\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getPaidItemsInfo = (trackingId) => {\r\n        requests.getPaymentInfoByTrackingId(trackingId, this.setPaidItemsToState)\r\n    }\r\n\r\n    setPaidItemsToState = (res) => {\r\n        if (res.statusCode === 200) {\r\n            let newSavedPaidItems = [];\r\n            res.data.map(ePaid => {\r\n                if (ePaid.isPaid && ePaid.itemType === \"food\") {\r\n                    let items = JSON.parse(ePaid.item);\r\n                    items.map(ePaidFood => {\r\n                        let flagUpdate = false\r\n                        newSavedPaidItems.map((eSavedPaidFood, index) => {\r\n                            if (ePaidFood.id === eSavedPaidFood.id) {\r\n                                flagUpdate = true;\r\n                                let newFoodNumber = ePaidFood.number + eSavedPaidFood.number;\r\n                                newSavedPaidItems[index] = {\r\n                                    id: eSavedPaidFood.id,\r\n                                    tPrice: newFoodNumber * ePaidFood.priceAfterDiscount,\r\n                                    number: newFoodNumber\r\n                                }\r\n                            }\r\n                        })\r\n                        if (!flagUpdate) {\r\n                            newSavedPaidItems.push({\r\n                                id: ePaidFood.id,\r\n                                tPrice: ePaidFood.number * ePaidFood.priceAfterDiscount,\r\n                                number: ePaidFood.number\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                let newOrderList = this.state.orderInfo.orderList.map(eOFood => {\r\n                    let newEOFood = JSON.parse(JSON.stringify(eOFood));\r\n                    let foodNumber = newEOFood.number;\r\n                    newSavedPaidItems.map(eSavedPaidFood => {\r\n                        if (newEOFood.id === eSavedPaidFood.id)\r\n                            foodNumber = parseInt(newEOFood.number) - parseInt(eSavedPaidFood.number);\r\n                    });\r\n                    newEOFood.number = foodNumber;\r\n                    return newEOFood;\r\n                })\r\n                this.setState({\r\n                    paidFoods: newSavedPaidItems,\r\n                    orderList: this.createFoodsToSelectToPay(newOrderList, this.state.selectedFoodToPay),\r\n                    orderListPaidNotIncluded: newOrderList,\r\n                })\r\n            })\r\n        } else {\r\n            console.log(\"Some thing went wrong during fetching Paid Items\")\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div id='reportHeader'/>\r\n            <div className='iransans' id='reportMain'>\r\n                <div id='wayHolderLine'>\r\n                    <div id='wayHolder'>\r\n                        <FontAwesomeIcon id='wayHolderElements' icon={faAngleDown}/>\r\n                        <span className='iransans' id='wayHolderElements'>\r\n                        گزارش سفارش\r\n                        </span>\r\n                        <span id='wayHolderElements'/>\r\n                    </div>\r\n                </div>\r\n                <div className='iransans' id='reportOrders'>\r\n                    {this.state.orderList}\r\n                </div>\r\n                <div className='iransans' id='ordersEndLine'/>\r\n                <div className='iransans' id=\"reportDetails\">\r\n\r\n                    {/*Number of order*/}\r\n                    <div id='trackingIdLabel'>\r\n                        <div className='orderNumberImg'></div>\r\n                        <span className='iransans' id='reportDetailsText'>\r\n                            شماره سفارش\r\n                        </span>\r\n                        <br/>\r\n                    </div>\r\n\r\n                    <p className='iransans'\r\n                       id='detailContent'>{fixnumbers.unfixNumber(this.props.match.params.trackingId.toString())}</p>\r\n                    <div className='iransans' id='trackingIdLabel'>\r\n                        <div className='orderAddressImg'/>\r\n                        <span className='iransans' id='reportDetailsText'>\r\n                            آدرس / شماره میز\r\n                        </span>\r\n                        <br/>\r\n                    </div>\r\n\r\n                    <p className='iransans' id='detailContent'>\r\n                        {this.state.addressOrTable}\r\n                    </p>\r\n\r\n                    <div id='trackingIdLabel'>\r\n                        <div className='orderTimeImg'/>\r\n                        <span className='iransans' id='reportDetailsText'>\r\n                            زمان تقریبی آماده شدن سفارش\r\n                        </span>\r\n                        <br/>\r\n                    </div>\r\n                    <p className='iransans' id='detailContent'>تعیین نشده</p>\r\n\r\n\r\n                    <div className='reportholdersAndPrices'>\r\n                        <div className='reportHolders'>\r\n                        <span className='iransans' id='reportDetailsText'>\r\n                            کل\r\n                        </span>\r\n                            <span className='iransans' id='reportDetailsText'>\r\n                            پرداخت شده\r\n                        </span>\r\n                        </div>\r\n                        <div className='reportHolders'>\r\n                        <span className='iransans' id='reportDetailsText'>\r\n                            {this.state.orderInfo.totalPrice} T\r\n                        </span>\r\n                            <span className='iransans' id='reportDetailsText'>\r\n                                {this.state.orderInfo.paidAmount} T\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='submitButtonContainer' onClick={this.handleSubmit}>\r\n                    <div onClick={this.handleSubmitClicked} className='submitButton shadow'>\r\n                        تایید\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className='backButton' onClick={() => {\r\n                        this.props.history.push('/openorders')\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        openOrdersInfo: store.reducerTempData.openOrdersInfo,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderReport);","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\AboutRestaurant\\AboutRestaurant.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\OpenOrders\\OpenOrders.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\index.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\actions.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerUser.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerFrontStates.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerTempData.js",["235"],"import {__init__TempData} from \"./__init__Reducers\";\r\nimport * as actionTypes from '../actionTypes'\r\nimport {produce} from \"immer\"\r\n\r\nexport default function reducerTempData (state = __init__TempData, action) {\r\n    switch (action.type) {\r\n        case actionTypes.SET_ORDER_LIST:\r\n            return produce(state, draftState=>{\r\n                draftState.orderList = action.payload.orderList\r\n            });\r\n        case actionTypes.ADD_FOOD_TO_ORDERS:\r\n            return produce(state, draftState=>{\r\n                draftState.orderList = [...draftState.orderList, action.payload.food]\r\n            });\r\n\r\n        case actionTypes.DELETE_FOOD_FROM_ORDERS:\r\n            return produce(state, draftState=>{\r\n                draftState.orderList = draftState.orderList.filter(food=> food.foods_id !== action.payload.foods_id)\r\n            });\r\n\r\n        case actionTypes.INCREASE_FOOD_NUMBER:\r\n            return produce(state, draftState=>{\r\n                draftState.orderList = draftState.orderList.map(food=> {\r\n                    if(food.foods_id === action.payload.foods_id){\r\n                        food.number += 1;\r\n                        food.totalPrice +=  food.price\r\n                        return food;\r\n                    }else {\r\n                        return food;\r\n                    }\r\n                })\r\n            });\r\n\r\n        case actionTypes.DECREASE_FOOD_NUMBER:\r\n            return produce(state, draftState=>{\r\n                draftState.orderList = draftState.orderList.map(food=> {\r\n                    if(food.foods_id === action.payload.foods_id){\r\n                        food.number -= 1;\r\n                        food.totalPrice -= food.price\r\n                        return food;\r\n                    }else {\r\n                        return food;\r\n                    }\r\n                })\r\n            });\r\n\r\n        case actionTypes.SET_ADDRESS:\r\n            return produce(state, draftState=>{\r\n                draftState.address = action.payload.address\r\n            });\r\n\r\n        case actionTypes.SET_TABLE:\r\n            return produce(state, draftState=>{\r\n                draftState.table = action.payload.table\r\n            });\r\n\r\n        case actionTypes.SET_HOW_TO_DELIVER:\r\n            return produce(state, draftState=>{\r\n                draftState.howToDeliver = action.payload.howToDeliver\r\n            });\r\n\r\n        case actionTypes.SET_HOW_TO_PAY:\r\n            return produce(state, draftState=>{\r\n                draftState.howToPay = action.payload.howToPay\r\n            });\r\n\r\n        case actionTypes.SET_TRACKING_ID:\r\n            return produce(state, draftState=>{\r\n                draftState.trackingId = action.payload.trackingId\r\n            });\r\n\r\n        case actionTypes.SET_OPEN_ORDERS_TRACKING_ID:\r\n\r\n            return produce(state, draftState=>{\r\n                draftState.openOrdersTrackingId = action.payload.openOrdersList.map(eOrder=>{\r\n                    return eOrder['tracking_id'];\r\n                });\r\n            });\r\n\r\n        case actionTypes.SET_OPEN_ORDERS_LIST_INFO:\r\n            let ordersListInfoListObject = {};\r\n            action.payload.openOrdersList.map(eOrder=>{\r\n                ordersListInfoListObject[eOrder['tracking_id']] = {\r\n                    \"orderList\":JSON.parse(eOrder['order_list']),\r\n                    \"deliveryPrice\":eOrder['delivery_price'],\r\n                    \"orderStatus\":eOrder['order_status'],\r\n                    \"address\":eOrder['address'],\r\n                    \"details\":eOrder['details'],\r\n                    \"paymentId\":eOrder['payment_id'],\r\n                    \"totalPrice\":eOrder['total_price'],\r\n                    \"orderedDate\":eOrder['ordered_date'],\r\n                    \"deliveryDate\":eOrder['delivery_date'],\r\n                    \"offcode\":eOrder['offcode'],\r\n                    \"paymentStatus\":eOrder['payment_status'],\r\n                    \"paidFoods\":eOrder['paid_foods'],\r\n                    \"howToServe\":eOrder['how_to_serve'],\r\n                    \"paidAmount\":eOrder['paid_amount'],\r\n                    \"orderTable\":eOrder['order_table'],\r\n                }\r\n            })\r\n            return produce(state, draftState=>{\r\n                draftState.openOrdersInfo = ordersListInfoListObject;\r\n            });\r\n        case actionTypes.DELETE_USER_ALL_DATA:\r\n            return produce(state, draftState=>{\r\n                draftState.openOrdersInfo = {};\r\n                draftState.openOrdersTrackingId = [];\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// case actionTypes.DECREASE_FOOD_NUMBER:\r\n// return produce(state, draftState=>{\r\n//     draftState.SMT = action.payload.SMT\r\n// });\r\n\r\n\r\n\r\n","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\reducerRestaurant.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\ApiRequests\\requests.js",["236"],"import $ from 'jquery';\r\nimport React from \"react\";\r\nimport * as actions from '../reduxStore/actions'\r\nimport {store} from '../reduxStore/store'\r\nimport * as cache from '../reduxStore/cachedData/cachedData'\r\n\r\nexport const BASE_URL = \"https://api.cuki.ir/\";\r\nexport const PAY_BASE_URL = \"https://pay.cuki.ir/\";\r\n\r\nexport const getUserInfo = (callbackFunction) => {\r\n    let token = store.getState().reducerUser.token;\r\n    $.post(BASE_URL+'getUserInfo.fetch.php',{token:token}).then(res =>{\r\n        if(res.statusCode === 200){\r\n            actions.userSetData(res.data)\r\n        }\r\n        callbackFunction(res)\r\n        return res;\r\n    })\r\n}\r\n\r\nexport const sendVerificationCode = (phone,checkPhone)=>{\r\n    $.post(BASE_URL+'sendVerificationCode.add.modify.php',{phone:phone}).then(res =>{\r\n        if(res.statusCode === 200){\r\n            actions.userSetPhone(phone)\r\n        }\r\n        checkPhone(res)\r\n        return res;\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const checkVerificationCode = (verificationCode,checkFunction) => {\r\n    let phone = store.getState().reducerUser.phone\r\n    $.post(BASE_URL+'login.modify.php',{phone:phone, verification_code:verificationCode}).then(res =>{\r\n        if(res.statusCode === 200){\r\n            cache.setCacheToken(res.token)\r\n            actions.userSetToken(res.token)\r\n        }\r\n        checkFunction(res)\r\n        return res;\r\n    })\r\n}\r\n\r\nexport const signUpRequest = (name,birthday,job,checkSignup)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    $.post(BASE_URL+\"signup.modify.php\",{token:token,name:name,birthday:birthday,job:job}).then(res=>{\r\n        checkSignup(res)\r\n        return res;\r\n    })\r\n\r\n}\r\nexport const profileEditRequest = (action, value, callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    switch (action) {\r\n        case \"editName\":\r\n            $.post(BASE_URL+ \"changeUserInfo.modify.php\" ,{token:token,\"name\":value,\"nameChange\":1}).then(res=>{\r\n                callbackFunction(res)\r\n                return res;\r\n            })\r\n            break;\r\n        case \"editJob\":\r\n            $.post(BASE_URL+ \"changeUserInfo.modify.php\" ,{token:token,\"job\":value,\"jobChange\":1}).then(res=>{\r\n                callbackFunction(res)\r\n                return res;\r\n            })\r\n            break;\r\n        case \"editBirthday\":\r\n            $.post(BASE_URL+ \"changeUserInfo.modify.php\" ,{token:token,\"birthday\":value,\"birthdayChange\":1}).then(res=>{\r\n                callbackFunction(res)\r\n                return res;\r\n            })\r\n            break;\r\n        default:\r\n            return \"Error\"\r\n    }\r\n\r\n}\r\n\r\nexport const getRestaurantInfo = (callbackFunction)=>{\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    $.post(BASE_URL+ \"getAllRestaurantData.fetch.php\" ,{english_name:englishName}).then(res=>{\r\n        if(res.statusCode === 200){\r\n            actions.restaurantSetData(res.data)\r\n        }\r\n        callbackFunction(res);\r\n        return res;\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getCustomerInfo = (callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    $.post(BASE_URL+ \"getCustomerInfoRestaurant.fetch.php\" ,{englishName, token}).then(res=>{\r\n        if(res.statusCode === 200){\r\n            actions.userSetCustomerInfo(res.data)\r\n            getOrderByTrackingId(JSON.parse(res.data.orderList).map(trackingId =>{return parseInt(trackingId);}), actions.userConvertTrackingIdToOrderObject, callbackFunction)\r\n        }else{\r\n            callbackFunction(res);\r\n        }\r\n    })\r\n}\r\n\r\nexport const getOrderByTrackingId = (trackingId,callbackFunctionByData, callbackFunction=()=>{})=>{\r\n    let token = store.getState().reducerUser.token;\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    $.post(BASE_URL+ \"getOrderByTrackingId.fetch.php\" ,{englishName, token, trackingId:JSON.stringify(trackingId)}).then(res=>{\r\n        callbackFunctionByData(res.data);\r\n        callbackFunction(res)\r\n    })\r\n}\r\n\r\n\r\nexport const sendOrder = (table,address,paymentStatus,callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    let orders = store.getState().reducerTempData.orderList.map(eachFood =>{return {id:eachFood.foods_id, number:eachFood.number}})\r\n    let details =  {general: '', eachFood: []}\r\n    $.post(BASE_URL+ \"sendOrder.add.php\" ,{englishName, token, orders:JSON.stringify(orders),details:JSON.stringify(details),deliveryPrice:'0',orderTable:table,address}).then(res=>{\r\n        if(res.statusCode === 200){\r\n            actions.setTrackingId(res.trackingId)\r\n        }\r\n        callbackFunction(res);\r\n        return res;\r\n    })\r\n}\r\n\r\n\r\nexport const sendReserveTable = (tableName, reserveDate, reserveHours,callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    $.post(BASE_URL+ \"sendReserveTable.add.php\" ,{englishName, token, tableName, reserveDate, reserveHours:JSON.stringify(reserveHours)}).then(res=>{\r\n        callbackFunction(res);\r\n    })\r\n}\r\n\r\n\r\nexport const sendPaymentRequestFood = (items, amount, trackingId,callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    let newItems = items.filter(eFood=>eFood.number > 0);\r\n    $.post(PAY_BASE_URL+ \"createpayment.php\" ,{englishName, token, itemType:\"food\", items:JSON.stringify(newItems), amount, trackingId}).then(res=>{\r\n        callbackFunction(res);\r\n    })\r\n}\r\n\r\n\r\nexport const getPaymentInfoByTrackingId = (trackingId,callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    $.post(BASE_URL+ \"getPaymentInfo.fetch.php\" ,{token, trackingId}).then(res=>{\r\n        callbackFunction(res);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getOpenOrders = (callbackFunction)=>{\r\n    let token = store.getState().reducerUser.token;\r\n    let englishName = store.getState().reducerRestaurant.englishName\r\n    $.post(BASE_URL+ \"getOpenOrders.fetch.php\" ,{englishName, token}).then(res=>{\r\n        actions.setOpenOrdersListInfo(res.data)\r\n        actions.setOpenOrdersTrackingId(res.data)\r\n        callbackFunction(res);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\VerificationCodeInput\\vCodeInput.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\cachedData\\cachedData.js",["237"],"import Cookies from \"js-cookie\";\r\nimport {store} from \"../store\";\r\n\r\nconst cookieNameOrderList = \"shilanCukiOrderList_00021031\"\r\nconst cookieNameToken = \"shilanCukiToken_00021031\"\r\n\r\n\r\n\r\nexport const setCacheToken = (token) =>{\r\n    Cookies.set(cookieNameToken, token)\r\n}\r\n\r\nexport const setCacheOrderList = (orderList) =>{\r\n    let draftList = [...orderList]\r\n    Cookies.set(cookieNameOrderList, draftList)\r\n}\r\n\r\nexport const getCacheOrderList = () =>{\r\n    if(Cookies.get(cookieNameOrderList) !== undefined){\r\n        return [...JSON.parse(Cookies.get(cookieNameOrderList))];\r\n    }\r\n    else{\r\n        return [] ;\r\n    }\r\n\r\n}\r\n\r\nexport const getCacheToken = () =>{\r\n    return Cookies.get(cookieNameToken)\r\n}\r\n\r\n\r\nexport const removeCacheToken = () =>{\r\n    Cookies.remove(cookieNameToken)\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\usableFunctions\\gregorianToTimestamp.js",["238","239"],"export function gregorianToTimestamp(date){\r\n    let timestamp = Date.parse(`${date[0].toString()} ` + `${date[1].toString()} ` + `${date[2].toString()} `);\r\n    timestamp = timestamp/1000|0;\r\n    timestamp= timestamp +24*60*60;\r\n    return timestamp\r\n}\r\n","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\usableFunctions\\jalaliToGregorian.js",["240","241","242"],"export const JalaliDate = {\r\n    g_days_in_month: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n    j_days_in_month: [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29]\r\n};\r\n\r\nexport const jalaliToGregorian = function(j_y, j_m, j_d) {\r\n    j_y = parseInt(j_y);\r\n    j_m = parseInt(j_m);\r\n    j_d = parseInt(j_d);\r\n    var jy = j_y - 979;\r\n    var jm = j_m - 1;\r\n    var jd = j_d - 1;\r\n\r\n    var j_day_no = 365 * jy + parseInt(jy / 33) * 8 + parseInt((jy % 33 + 3) / 4);\r\n    for (var i = 0; i < jm; ++i) j_day_no += JalaliDate.j_days_in_month[i];\r\n\r\n    j_day_no += jd;\r\n\r\n    var g_day_no = j_day_no + 79;\r\n\r\n    var gy = 1600 + 400 * parseInt(g_day_no / 146097); /* 146097 = 365*400 + 400/4 - 400/100 + 400/400 */\r\n    g_day_no = g_day_no % 146097;\r\n\r\n    var leap = true;\r\n    if (g_day_no >= 36525) /* 36525 = 365*100 + 100/4 */\r\n    {\r\n        g_day_no--;\r\n        gy += 100 * parseInt(g_day_no / 36524); /* 36524 = 365*100 + 100/4 - 100/100 */\r\n        g_day_no = g_day_no % 36524;\r\n\r\n        if (g_day_no >= 365) g_day_no++;\r\n        else leap = false;\r\n    }\r\n\r\n    gy += 4 * parseInt(g_day_no / 1461); /* 1461 = 365*4 + 4/4 */\r\n    g_day_no %= 1461;\r\n\r\n    if (g_day_no >= 366) {\r\n        leap = false;\r\n\r\n        g_day_no--;\r\n        gy += parseInt(g_day_no / 365);\r\n        g_day_no = g_day_no % 365;\r\n    }\r\n\r\n    for (var i = 0; g_day_no >= JalaliDate.g_days_in_month[i] + (i == 1 && leap); i++)\r\n        g_day_no -= JalaliDate.g_days_in_month[i] + (i == 1 && leap);\r\n    var gm = i + 1;\r\n    var gd = g_day_no + 1;\r\n\r\n    gm = gm < 10 ? \"0\" + gm : gm;\r\n    gd = gd < 10 ? \"0\" + gd : gd;\r\n\r\n    return [gy, gm, gd];\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\usableFunctions\\englishNumToPersianNum.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\BottomNavigation\\BottomNavigation.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\js\\randomColor.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\js\\rowDataToObject.js",["243"],"export default function rewDataToObject(rowData) {\r\n    let persianGroupsRestaurant = {appetizer:'پیش غذا', burger: 'برگر', pizza: 'پیتزا' , panini:'پنینی' , main:'غذای اصلی',\r\n        irani: 'ایرانی' , dessert:'دسر' , pasta: 'پاستا', drink:\"نوشیدنی\"};\r\n\r\n    let persianGroupsCoffeeshop = {mohito:\"موهیتو\",hotDrink:\"نوشیدنی های گرم\", cake:\"کیک\", brewed:\"دم کرده\",shake:'شیک'}\r\n\r\n    let sampleFinalObject = {\r\n        restaurant:{\r\n            appetizer: {persianName:\"\", foodList:[{name:\"\", price:\"\"}, {name:\"\", price:\"\"}, ]},\r\n            burger: {persianName:\"\", foodList:[{name:\"\", price:\"\"}, ]},\r\n        },\r\n        coffeeshop:{\r\n            hotDrink:{persianName:\"\", foodList:[{name:\"\", price:\"\"}, ]},\r\n            cake:{persianName:\"\", foodList:[{name:\"\", price:\"\"}, ]},\r\n        }\r\n    }\r\n\r\n\r\n    let resultObject = {\r\n        restaurant:{},\r\n        coffeeshop:{},\r\n        notDefined:{},\r\n    }\r\n\r\n    for(let i = 0; i < rowData.length ; i++){\r\n        if(persianGroupsRestaurant[rowData[i].group]){\r\n            if(!resultObject.restaurant[rowData[i].group]){\r\n                resultObject.restaurant[rowData[i].group] = {persianName:persianGroupsRestaurant[rowData[i].group], foodList:[]}\r\n            }\r\n            resultObject.restaurant[rowData[i].group].foodList.push(rowData[i]);\r\n        }else if(persianGroupsCoffeeshop[rowData[i].group]){\r\n            if(!resultObject.coffeeshop[rowData[i].group]){\r\n                resultObject.coffeeshop[rowData[i].group] = {persianName:persianGroupsCoffeeshop[rowData[i].group], foodList:[]}\r\n            }\r\n            resultObject.coffeeshop[rowData[i].group].foodList.push(rowData[i]);\r\n        }else {\r\n            if(!resultObject.notDefined[rowData[i].group]){\r\n                resultObject.notDefined[rowData[i].group] = {persianName:\"نامشخص\", foodList:[]}\r\n            }\r\n            resultObject.notDefined[rowData[i].group].foodList.push(rowData[i]);\r\n        }\r\n    }\r\n    return resultObject;\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MainPage\\js\\moreOrderedFoods.js",["244","245"],"export default function moreOrderedFoods(userHistoryOrders, allFoodsArray) {\r\n    let allOrderedFoodTimes = {}\r\n    let draftUserHistoryOrders = [...userHistoryOrders]\r\n    let draftAllFoodsArray = [...allFoodsArray]\r\n    draftUserHistoryOrders.map(eachOrder=>{\r\n        JSON.parse(eachOrder['order_list']).map(eachFood=>{\r\n            if(allOrderedFoodTimes[eachFood.id]){\r\n                allOrderedFoodTimes[eachFood.id] += eachFood.number\r\n            }else {\r\n                allOrderedFoodTimes[eachFood.id] = eachFood.number\r\n            }\r\n        })\r\n    })\r\n\r\n    let sevenMoreOrdered = Object.keys(allOrderedFoodTimes).sort(function (a, b) {return allOrderedFoodTimes[a] - allOrderedFoodTimes[b]}).reverse()\r\n        .map(eachFoodId=>{\r\n            if(draftAllFoodsArray.filter(eachAllFoodId=> eachFoodId === eachAllFoodId.foods_id)[0])\r\n                return draftAllFoodsArray.filter(eachAllFoodId=> eachFoodId === eachAllFoodId.foods_id)[0]['foods_id']\r\n            else\r\n                return undefined\r\n    }).filter(eachFoodId=> eachFoodId > 0).slice(0,7);\r\n\r\n\r\n\r\n    if(sevenMoreOrdered.length >=7){\r\n        return sevenMoreOrdered;\r\n    }else {\r\n        return sevenMoreOrdered.concat(moreOrderedFoodRestaurant(draftAllFoodsArray)).slice(0,7)\r\n    }\r\n}\r\n\r\n\r\nfunction moreOrderedFoodRestaurant(allFoodsArray) {\r\n    return allFoodsArray.sort((a,b) => {return b.order_times - a.order_times}).filter(eachFood=> eachFood.group !== \"drink\" ).slice(0,10).map((eachFood=>{return eachFood.foods_id}))\r\n}","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\MoreFoodDetails\\MoreDetails.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\ReserveTable\\js\\availableReserviationTimes.js",["246","247","248","249"],"import moment from \"moment-jalaali\";\r\nimport produce from \"immer\"\r\n\r\nconst __init__openTimes = {0:[], 1:[], 2:[], 3:[], 4:[], 5:[], 6:[]};  // 0 is sunday\r\nconst __init__ReservedTablesList = [];\r\n\r\nexport default function availableReservationTimes(openTimes, reservedTablesList, allTableList){\r\n\r\n    if (!(typeof openTimes === 'object' && openTimes !== null && typeof reservedTablesList === 'object' && reservedTablesList !== null)){\r\n        return false;\r\n    }\r\n\r\n    let ot = produce(openTimes, draft=>{});\r\n    let rtl = JSON.parse(JSON.stringify(reservedTablesList));\r\n    let atl = JSON.parse(JSON.stringify(allTableList));\r\n\r\n    let finalObject = {\r\n        \"1399/8/28\": {\r\n            dayInfo:{\r\n                weekStrFa:\"چهارشنبه\",\r\n                monthStrFa:\"آبان\"\r\n            },\r\n            AllFreeHHours:[2,3,4,15,32,33,36,37],\r\n            tableFreeHHours:{\r\n                tableName1: [2,3,4,15, 32, 33],\r\n                tableName2: [32,33,36,37],\r\n                \"and so on...\":\"\"\r\n            }\r\n        },\r\n        \"1399/8/29\": {\r\n            dayInfo:{\r\n                weekStrFa: \"پنجشنبه\",\r\n                monthStrFa: \"آبان\"\r\n            },\r\n            AllFreeHHours:[],\r\n            tableFreeHHours:{\r\n                tableName1: [],\r\n                tableName2: [],\r\n                \"and so on...\":\"\"\r\n            }\r\n        },\r\n        \"and so on for 14 days\":\"\",\r\n    }\r\n\r\n    let result = {}\r\n    let nowDate = new Date()\r\n    for(let i = 0; i < 14; i++){\r\n        let newDateJ =  moment(nowDate).add(i, 'd').format(\"jYYYY/jM/jD\");\r\n        let tablesFreeHHours = tableFreeHHours(newDateJ, rtl, ot, atl);\r\n        result[newDateJ] = {\r\n            dayInfo: dayInfo(newDateJ),\r\n            AllFreeHHours: [].concat.apply([], Object.values(tablesFreeHHours)).filter((v, i, a) => a.indexOf(v) === i),\r\n            tableFreeHHours:tablesFreeHHours\r\n        }\r\n    }\r\n\r\n    console.log(result);\r\n    return result;\r\n\r\n}\r\n\r\n\r\nfunction dayInfo(date){\r\n    moment.loadPersian({dialect: 'persian-modern'})\r\n    let dateMoment = moment(date,'jYYYY/jM/jD')\r\n    if(!dateMoment.isValid()){\r\n        return false;\r\n    }\r\n    return {\r\n        weekStrFa: dateMoment.format(\"dddd\"),\r\n        monthStrFa: dateMoment.format(\"jMMMM\"),\r\n    }\r\n}\r\n\r\nfunction tableFreeHHours(date, rtl, ot, atl){\r\n    let dateMomentObject = moment(date,'jYYYY/jM/jD')\r\n    let dayOT = ot[dateMomentObject.format(\"e\")]\r\n    let datOTHHourFormat =\r\n        [].concat.apply([],\r\n            dayOT.map(eachHour=>{\r\n                return [eachHour*2, eachHour*2+1]\r\n            })\r\n        );\r\n    let finalTableFreeHHour = {}\r\n\r\n    atl.map(eachTable=>{\r\n        let dayRTL = rtl.filter(eachReserve =>\r\n            moment(new Date(parseInt(eachReserve.reserved_date) *1000)).format('jYYYY/jM/jD') ===  dateMomentObject.format('jYYYY/jM/jD')\r\n            &&\r\n            eachReserve.table_name === eachTable.table_name\r\n        )\r\n\r\n        let reservedHHourArr = dayRTL.map(eachReserve =>{return JSON.parse(eachReserve.reserved_hours) ? JSON.parse(eachReserve.reserved_hours) : eachReserve.reserved_hours})\r\n        let reservedHHour = [].concat.apply([], reservedHHourArr);\r\n\r\n        let hHoursList = datOTHHourFormat\r\n            .filter(x => !reservedHHour.includes(x))\r\n            .concat(reservedHHour.filter(x => !datOTHHourFormat.includes(x))).filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n        if(hHoursList.length > 0){\r\n            finalTableFreeHHour[eachTable.table_name] = hHoursList;\r\n        }\r\n\r\n\r\n    })\r\n\r\n    return finalTableFreeHHour;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\actionTypes.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\reduxStore\\reducers\\__init__Reducers.js",[],"C:\\xampp\\htdocs\\arnoyafood\\shilan-app2\\src\\Components\\CusFood\\CusFood.js",["250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":13,"column":8,"nodeType":"257","messageId":"258","endLine":13,"endColumn":15},{"ruleId":"255","severity":1,"message":"259","line":159,"column":7,"nodeType":"257","messageId":"258","endLine":159,"endColumn":30},{"ruleId":"255","severity":1,"message":"260","line":206,"column":7,"nodeType":"257","messageId":"258","endLine":206,"endColumn":21},{"ruleId":"255","severity":1,"message":"261","line":212,"column":7,"nodeType":"257","messageId":"258","endLine":212,"endColumn":18},{"ruleId":"255","severity":1,"message":"262","line":221,"column":7,"nodeType":"257","messageId":"258","endLine":221,"endColumn":20},{"ruleId":"255","severity":1,"message":"263","line":230,"column":7,"nodeType":"257","messageId":"258","endLine":230,"endColumn":16},{"ruleId":"255","severity":1,"message":"264","line":239,"column":7,"nodeType":"257","messageId":"258","endLine":239,"endColumn":18},{"ruleId":"265","severity":1,"message":"266","line":235,"column":76,"nodeType":"267","endLine":235,"endColumn":86},{"ruleId":"265","severity":1,"message":"266","line":245,"column":44,"nodeType":"267","endLine":245,"endColumn":54},{"ruleId":"255","severity":1,"message":"268","line":318,"column":7,"nodeType":"257","messageId":"258","endLine":318,"endColumn":25},{"ruleId":"255","severity":1,"message":"269","line":51,"column":13,"nodeType":"257","messageId":"258","endLine":51,"endColumn":23},{"ruleId":"255","severity":1,"message":"259","line":241,"column":7,"nodeType":"257","messageId":"258","endLine":241,"endColumn":30},{"ruleId":"255","severity":1,"message":"270","line":296,"column":7,"nodeType":"257","messageId":"258","endLine":296,"endColumn":23},{"ruleId":"255","severity":1,"message":"260","line":320,"column":7,"nodeType":"257","messageId":"258","endLine":320,"endColumn":21},{"ruleId":"255","severity":1,"message":"261","line":326,"column":7,"nodeType":"257","messageId":"258","endLine":326,"endColumn":18},{"ruleId":"255","severity":1,"message":"262","line":335,"column":7,"nodeType":"257","messageId":"258","endLine":335,"endColumn":20},{"ruleId":"255","severity":1,"message":"263","line":344,"column":7,"nodeType":"257","messageId":"258","endLine":344,"endColumn":16},{"ruleId":"255","severity":1,"message":"264","line":353,"column":7,"nodeType":"257","messageId":"258","endLine":353,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":59,"column":9,"nodeType":"273","endLine":59,"endColumn":19},{"ruleId":"265","severity":1,"message":"266","line":133,"column":44,"nodeType":"267","endLine":133,"endColumn":54},{"ruleId":"265","severity":1,"message":"266","line":142,"column":109,"nodeType":"267","endLine":142,"endColumn":119},{"ruleId":"255","severity":1,"message":"274","line":189,"column":7,"nodeType":"257","messageId":"258","endLine":189,"endColumn":25},{"ruleId":"255","severity":1,"message":"275","line":199,"column":7,"nodeType":"257","messageId":"258","endLine":199,"endColumn":21},{"ruleId":"255","severity":1,"message":"276","line":214,"column":7,"nodeType":"257","messageId":"258","endLine":214,"endColumn":20},{"ruleId":"255","severity":1,"message":"268","line":242,"column":7,"nodeType":"257","messageId":"258","endLine":242,"endColumn":25},{"ruleId":"255","severity":1,"message":"277","line":259,"column":7,"nodeType":"257","messageId":"258","endLine":259,"endColumn":18},{"ruleId":"255","severity":1,"message":"260","line":269,"column":7,"nodeType":"257","messageId":"258","endLine":269,"endColumn":21},{"ruleId":"255","severity":1,"message":"261","line":274,"column":7,"nodeType":"257","messageId":"258","endLine":274,"endColumn":18},{"ruleId":"255","severity":1,"message":"262","line":282,"column":7,"nodeType":"257","messageId":"258","endLine":282,"endColumn":20},{"ruleId":"255","severity":1,"message":"263","line":290,"column":7,"nodeType":"257","messageId":"258","endLine":290,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":90,"column":54,"nodeType":"280","messageId":"281","endLine":90,"endColumn":56},{"ruleId":"282","severity":1,"message":"283","line":104,"column":33,"nodeType":"284","messageId":"285","endLine":104,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":106,"column":13,"nodeType":"273","endLine":106,"endColumn":23},{"ruleId":"255","severity":1,"message":"286","line":141,"column":13,"nodeType":"257","messageId":"258","endLine":141,"endColumn":33},{"ruleId":"255","severity":1,"message":"287","line":143,"column":13,"nodeType":"257","messageId":"258","endLine":143,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":224,"column":42,"nodeType":"284","messageId":"285","endLine":224,"endColumn":44},{"ruleId":"282","severity":1,"message":"283","line":226,"column":43,"nodeType":"284","messageId":"285","endLine":226,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":333,"column":21,"nodeType":"273","endLine":333,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":505,"column":33,"nodeType":"273","endLine":505,"endColumn":43},{"ruleId":"278","severity":1,"message":"279","line":15,"column":33,"nodeType":"280","messageId":"281","endLine":15,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":68,"column":27,"nodeType":"280","messageId":"281","endLine":68,"endColumn":29},{"ruleId":"278","severity":1,"message":"279","line":76,"column":38,"nodeType":"280","messageId":"281","endLine":76,"endColumn":40},{"ruleId":"278","severity":1,"message":"279","line":89,"column":32,"nodeType":"280","messageId":"281","endLine":89,"endColumn":34},{"ruleId":"278","severity":1,"message":"279","line":25,"column":43,"nodeType":"280","messageId":"281","endLine":25,"endColumn":45},{"ruleId":"255","severity":1,"message":"288","line":2,"column":13,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":272,"column":48,"nodeType":"280","messageId":"281","endLine":272,"endColumn":50},{"ruleId":"289","severity":1,"message":"290","line":354,"column":75,"nodeType":"284","messageId":"291","endLine":354,"endColumn":76},{"ruleId":"289","severity":1,"message":"290","line":385,"column":49,"nodeType":"284","messageId":"291","endLine":385,"endColumn":50},{"ruleId":"289","severity":1,"message":"290","line":386,"column":78,"nodeType":"284","messageId":"291","endLine":386,"endColumn":79},{"ruleId":"289","severity":1,"message":"290","line":387,"column":62,"nodeType":"284","messageId":"291","endLine":387,"endColumn":63},{"ruleId":"278","severity":1,"message":"279","line":419,"column":32,"nodeType":"280","messageId":"281","endLine":419,"endColumn":34},{"ruleId":"278","severity":1,"message":"279","line":422,"column":41,"nodeType":"280","messageId":"281","endLine":422,"endColumn":43},{"ruleId":"278","severity":1,"message":"279","line":424,"column":71,"nodeType":"280","messageId":"281","endLine":424,"endColumn":73},{"ruleId":"278","severity":1,"message":"279","line":447,"column":58,"nodeType":"280","messageId":"281","endLine":447,"endColumn":60},{"ruleId":"278","severity":1,"message":"279","line":104,"column":48,"nodeType":"280","messageId":"281","endLine":104,"endColumn":50},{"ruleId":"289","severity":1,"message":"290","line":137,"column":49,"nodeType":"284","messageId":"291","endLine":137,"endColumn":50},{"ruleId":"289","severity":1,"message":"290","line":138,"column":78,"nodeType":"284","messageId":"291","endLine":138,"endColumn":79},{"ruleId":"289","severity":1,"message":"290","line":139,"column":62,"nodeType":"284","messageId":"291","endLine":139,"endColumn":63},{"ruleId":"278","severity":1,"message":"279","line":164,"column":32,"nodeType":"280","messageId":"281","endLine":164,"endColumn":34},{"ruleId":"278","severity":1,"message":"279","line":167,"column":41,"nodeType":"280","messageId":"281","endLine":167,"endColumn":43},{"ruleId":"278","severity":1,"message":"279","line":169,"column":71,"nodeType":"280","messageId":"281","endLine":169,"endColumn":73},{"ruleId":"278","severity":1,"message":"279","line":192,"column":58,"nodeType":"280","messageId":"281","endLine":192,"endColumn":60},{"ruleId":"278","severity":1,"message":"279","line":82,"column":53,"nodeType":"280","messageId":"281","endLine":82,"endColumn":55},{"ruleId":"255","severity":1,"message":"292","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":13},{"ruleId":"255","severity":1,"message":"293","line":2,"column":9,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"289","severity":1,"message":"290","line":2,"column":57,"nodeType":"284","messageId":"291","endLine":2,"endColumn":58},{"ruleId":"289","severity":1,"message":"290","line":2,"column":84,"nodeType":"284","messageId":"291","endLine":2,"endColumn":85},{"ruleId":"294","severity":1,"message":"295","line":46,"column":14,"nodeType":"257","messageId":"296","endLine":46,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":46,"column":68,"nodeType":"284","messageId":"285","endLine":46,"endColumn":70},{"ruleId":"282","severity":1,"message":"283","line":47,"column":56,"nodeType":"284","messageId":"285","endLine":47,"endColumn":58},{"ruleId":"255","severity":1,"message":"297","line":7,"column":9,"nodeType":"257","messageId":"258","endLine":7,"endColumn":26},{"ruleId":"278","severity":1,"message":"279","line":5,"column":41,"nodeType":"280","messageId":"281","endLine":5,"endColumn":43},{"ruleId":"278","severity":1,"message":"279","line":6,"column":57,"nodeType":"280","messageId":"281","endLine":6,"endColumn":59},{"ruleId":"255","severity":1,"message":"298","line":4,"column":7,"nodeType":"257","messageId":"258","endLine":4,"endColumn":24},{"ruleId":"255","severity":1,"message":"299","line":5,"column":7,"nodeType":"257","messageId":"258","endLine":5,"endColumn":33},{"ruleId":"255","severity":1,"message":"300","line":17,"column":9,"nodeType":"257","messageId":"258","endLine":17,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":86,"column":22,"nodeType":"280","messageId":"281","endLine":86,"endColumn":24},{"ruleId":"255","severity":1,"message":"301","line":43,"column":10,"nodeType":"257","messageId":"258","endLine":43,"endColumn":28},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'Tour360' is defined but never used.","Identifier","unusedVar","'smallMainContainerStyle' is assigned a value but never used.","'topOfMainStyle' is assigned a value but never used.","'avatarStyle' is assigned a value but never used.","'menuIconStyle' is assigned a value but never used.","'logoStyle' is assigned a value but never used.","'vectorStyle' is assigned a value but never used.","jsx-a11y/aria-proptypes","The value for aria-label must be a string.","JSXAttribute","'inputBirthdayStyle' is assigned a value but never used.","'getElement' is assigned a value but never used.","'smallButtonStyle' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'MainContainerStyle' is assigned a value but never used.","'inputNameStyle' is assigned a value but never used.","'inputjobStyle' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'coffeeshopCategories' is assigned a value but never used.","'coffeeshopFoodsList' is assigned a value but never used.","'actions' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'React' is defined but never used.","'store' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'sampleFinalObject' is assigned a value but never used.","'__init__openTimes' is assigned a value but never used.","'__init__ReservedTablesList' is assigned a value but never used.","'finalObject' is assigned a value but never used.","'mapDispatchToProps' is defined but never used.","no-global-assign","no-unsafe-negation"]